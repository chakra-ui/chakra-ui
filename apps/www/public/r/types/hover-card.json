{
  "Arrow": {
    "props": {
      "as": {
        "type": "React.ElementType",
        "isRequired": false,
        "description": "The underlying element to render."
      },
      "asChild": {
        "type": "boolean",
        "isRequired": false,
        "description": "Use the provided child element as the default rendered element, combining their props and behavior."
      }
    },
    "element": "HTMLDivElement"
  },
  "ArrowTip": {
    "props": {
      "as": {
        "type": "React.ElementType",
        "isRequired": false,
        "description": "The underlying element to render."
      },
      "asChild": {
        "type": "boolean",
        "isRequired": false,
        "description": "Use the provided child element as the default rendered element, combining their props and behavior."
      }
    },
    "element": "HTMLDivElement"
  },
  "Content": {
    "props": {
      "as": {
        "type": "React.ElementType",
        "isRequired": false,
        "description": "The underlying element to render."
      },
      "asChild": {
        "type": "boolean",
        "isRequired": false,
        "description": "Use the provided child element as the default rendered element, combining their props and behavior."
      }
    },
    "element": "HTMLDivElement"
  },
  "Positioner": {
    "props": {
      "as": {
        "type": "React.ElementType",
        "isRequired": false,
        "description": "The underlying element to render."
      },
      "asChild": {
        "type": "boolean",
        "isRequired": false,
        "description": "Use the provided child element as the default rendered element, combining their props and behavior."
      }
    },
    "element": "HTMLDivElement"
  },
  "Root": {
    "props": {
      "as": {
        "type": "React.ElementType",
        "isRequired": false,
        "description": "The underlying element to render."
      },
      "asChild": {
        "type": "boolean",
        "isRequired": false,
        "description": "Use the provided child element as the default rendered element, combining their props and behavior."
      },
      "unstyled": {
        "type": "boolean",
        "isRequired": false,
        "description": "Whether to remove the component's style."
      },
      "closeDelay": {
        "type": "number",
        "isRequired": false,
        "defaultValue": "300",
        "description": "The duration from when the mouse leaves the trigger or content until the hover card closes."
      },
      "defaultOpen": {
        "type": "boolean",
        "isRequired": false,
        "description": "The initial open state of the hover card when rendered.\nUse when you don't need to control the open state of the hover card."
      },
      "id": {
        "type": "string",
        "isRequired": false,
        "description": "The unique identifier of the machine."
      },
      "ids": {
        "type": "Partial<{ trigger: string; content: string; positioner: string; arrow: string }>",
        "isRequired": false,
        "description": "The ids of the elements in the popover. Useful for composition."
      },
      "immediate": {
        "type": "boolean",
        "isRequired": false,
        "description": "Whether to synchronize the present change immediately or defer it to the next frame"
      },
      "lazyMount": {
        "type": "boolean",
        "isRequired": false,
        "defaultValue": "false",
        "description": "Whether to enable lazy mounting"
      },
      "onExitComplete": {
        "type": "VoidFunction",
        "isRequired": false,
        "description": "Function called when the animation ends in the closed state"
      },
      "onFocusOutside": {
        "type": "(event: FocusOutsideEvent) => void",
        "isRequired": false,
        "description": "Function called when the focus is moved outside the component"
      },
      "onInteractOutside": {
        "type": "(event: InteractOutsideEvent) => void",
        "isRequired": false,
        "description": "Function called when an interaction happens outside the component"
      },
      "onOpenChange": {
        "type": "(details: OpenChangeDetails) => void",
        "isRequired": false,
        "description": "Function called when the hover card opens or closes."
      },
      "onPointerDownOutside": {
        "type": "(event: PointerDownOutsideEvent) => void",
        "isRequired": false,
        "description": "Function called when the pointer is pressed down outside the component"
      },
      "open": {
        "type": "boolean",
        "isRequired": false,
        "description": "The controlled open state of the hover card"
      },
      "openDelay": {
        "type": "number",
        "isRequired": false,
        "defaultValue": "700",
        "description": "The duration from when the mouse enters the trigger until the hover card opens."
      },
      "positioning": {
        "type": "PositioningOptions",
        "isRequired": false,
        "description": "The user provided options used to position the popover content"
      },
      "present": {
        "type": "boolean",
        "isRequired": false,
        "description": "Whether the node is present (controlled by the user)"
      },
      "skipAnimationOnMount": {
        "type": "boolean",
        "isRequired": false,
        "defaultValue": "false",
        "description": "Whether to allow the initial presence animation."
      },
      "unmountOnExit": {
        "type": "boolean",
        "isRequired": false,
        "defaultValue": "false",
        "description": "Whether to unmount on exit."
      },
      "colorPalette": {
        "defaultValue": "gray",
        "type": "\"gray\" | \"red\" | \"orange\" | \"yellow\" | \"green\" | \"teal\" | \"blue\" | \"cyan\" | \"purple\" | \"pink\"",
        "isRequired": false,
        "description": "The color palette of the component"
      },
      "size": {
        "type": "\"xs\" | \"sm\" | \"md\" | \"lg\"",
        "defaultValue": "md",
        "isRequired": false,
        "description": "The size of the component"
      }
    }
  },
  "RootProvider": {
    "props": {
      "as": {
        "type": "React.ElementType",
        "isRequired": false,
        "description": "The underlying element to render."
      },
      "asChild": {
        "type": "boolean",
        "isRequired": false,
        "description": "Use the provided child element as the default rendered element, combining their props and behavior."
      },
      "value": {
        "type": "UseHoverCardReturn",
        "isRequired": true
      },
      "immediate": {
        "type": "boolean",
        "isRequired": false,
        "description": "Whether to synchronize the present change immediately or defer it to the next frame"
      },
      "lazyMount": {
        "type": "boolean",
        "isRequired": false,
        "defaultValue": "false",
        "description": "Whether to enable lazy mounting"
      },
      "onExitComplete": {
        "type": "VoidFunction",
        "isRequired": false,
        "description": "Function called when the animation ends in the closed state"
      },
      "present": {
        "type": "boolean",
        "isRequired": false,
        "description": "Whether the node is present (controlled by the user)"
      },
      "skipAnimationOnMount": {
        "type": "boolean",
        "isRequired": false,
        "defaultValue": "false",
        "description": "Whether to allow the initial presence animation."
      },
      "unmountOnExit": {
        "type": "boolean",
        "isRequired": false,
        "defaultValue": "false",
        "description": "Whether to unmount on exit."
      }
    }
  },
  "Trigger": {
    "props": {
      "as": {
        "type": "React.ElementType",
        "isRequired": false,
        "description": "The underlying element to render."
      },
      "asChild": {
        "type": "boolean",
        "isRequired": false,
        "description": "Use the provided child element as the default rendered element, combining their props and behavior."
      }
    },
    "element": "HTMLButtonElement"
  }
}