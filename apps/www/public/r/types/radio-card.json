{
  "ItemControl": {
    "props": {
      "as": {
        "type": "React.ElementType",
        "isRequired": false,
        "description": "The underlying element to render."
      },
      "asChild": {
        "type": "boolean",
        "isRequired": false,
        "description": "Use the provided child element as the default rendered element, combining their props and behavior."
      }
    },
    "element": "HTMLDivElement"
  },
  "Item": {
    "props": {
      "icon": {
        "type": "React.ReactElement",
        "isRequired": false
      },
      "label": {
        "type": "React.ReactNode",
        "isRequired": false
      },
      "description": {
        "type": "React.ReactNode",
        "isRequired": false
      },
      "addon": {
        "type": "React.ReactNode",
        "isRequired": false
      },
      "indicator": {
        "type": "React.ReactNode | null",
        "isRequired": false
      },
      "indicatorPlacement": {
        "type": "\"start\" | \"end\" | \"inside\"",
        "isRequired": false
      },
      "inputProps": {
        "type": "React.InputHTMLAttributes<HTMLInputElement>",
        "isRequired": false
      },
      "as": {
        "type": "React.ElementType",
        "isRequired": false,
        "description": "The underlying element to render."
      },
      "asChild": {
        "type": "boolean",
        "isRequired": false,
        "description": "Use the provided child element as the default rendered element, combining their props and behavior."
      },
      "value": {
        "type": "string",
        "isRequired": true
      },
      "disabled": {
        "type": "boolean",
        "isRequired": false
      },
      "invalid": {
        "type": "boolean",
        "isRequired": false
      }
    },
    "element": "HTMLLabelElement"
  },
  "ItemText": {
    "props": {
      "as": {
        "type": "React.ElementType",
        "isRequired": false,
        "description": "The underlying element to render."
      },
      "asChild": {
        "type": "boolean",
        "isRequired": false,
        "description": "Use the provided child element as the default rendered element, combining their props and behavior."
      }
    },
    "element": "HTMLSpanElement"
  },
  "Label": {
    "props": {
      "as": {
        "type": "React.ElementType",
        "isRequired": false,
        "description": "The underlying element to render."
      },
      "asChild": {
        "type": "boolean",
        "isRequired": false,
        "description": "Use the provided child element as the default rendered element, combining their props and behavior."
      }
    },
    "element": "HTMLLabelElement"
  },
  "Root": {
    "props": {
      "as": {
        "type": "React.ElementType",
        "isRequired": false,
        "description": "The underlying element to render."
      },
      "asChild": {
        "type": "boolean",
        "isRequired": false,
        "description": "Use the provided child element as the default rendered element, combining their props and behavior."
      },
      "unstyled": {
        "type": "boolean",
        "isRequired": false,
        "description": "Whether to remove the component's style."
      },
      "defaultValue": {
        "type": "string",
        "isRequired": false,
        "description": "The initial value of the checked radio when rendered.\nUse when you don't need to control the value of the radio group."
      },
      "disabled": {
        "type": "boolean",
        "isRequired": false,
        "description": "If `true`, the radio group will be disabled"
      },
      "form": {
        "type": "string",
        "isRequired": false,
        "description": "The associate form of the underlying input."
      },
      "id": {
        "type": "string",
        "isRequired": false,
        "description": "The unique identifier of the machine."
      },
      "ids": {
        "type": "Partial<{\n  root: string\n  label: string\n  indicator: string\n  item: (value: string) => string\n  itemLabel: (value: string) => string\n  itemControl: (value: string) => string\n  itemHiddenInput: (value: string) => string\n}>",
        "isRequired": false,
        "description": "The ids of the elements in the radio. Useful for composition."
      },
      "name": {
        "type": "string",
        "isRequired": false,
        "description": "The name of the input fields in the radio\n(Useful for form submission)."
      },
      "onValueChange": {
        "type": "(details: ValueChangeDetails) => void",
        "isRequired": false,
        "description": "Function called once a radio is checked"
      },
      "orientation": {
        "type": "\"vertical\" | \"horizontal\"",
        "isRequired": false,
        "description": "The orientation of the component",
        "defaultValue": "horizontal"
      },
      "readOnly": {
        "type": "boolean",
        "isRequired": false,
        "description": "Whether the checkbox is read-only"
      },
      "value": {
        "type": "string",
        "isRequired": false,
        "description": "The controlled value of the radio group"
      },
      "colorPalette": {
        "defaultValue": "gray",
        "type": "\"gray\" | \"red\" | \"orange\" | \"yellow\" | \"green\" | \"teal\" | \"blue\" | \"cyan\" | \"purple\" | \"pink\"",
        "isRequired": false,
        "description": "The color palette of the component"
      },
      "size": {
        "type": "\"sm\" | \"md\" | \"lg\"",
        "defaultValue": "md",
        "isRequired": false,
        "description": "The size of the component"
      },
      "variant": {
        "type": "\"surface\" | \"subtle\" | \"outline\" | \"solid\"",
        "defaultValue": "outline",
        "isRequired": false,
        "description": "The variant of the component"
      },
      "justify": {
        "type": "\"start\" | \"end\" | \"center\"",
        "isRequired": false,
        "description": "The justify of the component"
      },
      "align": {
        "type": "\"start\" | \"end\" | \"center\"",
        "defaultValue": "start",
        "isRequired": false,
        "description": "The align of the component"
      }
    },
    "element": "HTMLDivElement"
  },
  "RootProvider": {
    "props": {
      "as": {
        "type": "React.ElementType",
        "isRequired": false,
        "description": "The underlying element to render."
      },
      "asChild": {
        "type": "boolean",
        "isRequired": false,
        "description": "Use the provided child element as the default rendered element, combining their props and behavior."
      },
      "value": {
        "type": "UseRadioGroupReturn",
        "isRequired": true
      }
    },
    "element": "HTMLDivElement"
  },
  "ItemAddon": {
    "props": {
      "as": {
        "type": "React.ElementType",
        "isRequired": false,
        "description": "The underlying element to render."
      },
      "asChild": {
        "type": "boolean",
        "isRequired": false,
        "description": "Use the provided child element as the default rendered element, combining their props and behavior."
      }
    }
  },
  "ItemIndicator": {
    "props": {
      "checked": {
        "type": "React.ReactElement | undefined",
        "isRequired": false
      },
      "as": {
        "type": "React.ElementType",
        "isRequired": false,
        "description": "The underlying element to render."
      },
      "asChild": {
        "type": "boolean",
        "isRequired": false,
        "description": "Use the provided child element as the default rendered element, combining their props and behavior."
      }
    }
  },
  "ItemContent": {
    "props": {
      "as": {
        "type": "React.ElementType",
        "isRequired": false,
        "description": "The underlying element to render."
      },
      "asChild": {
        "type": "boolean",
        "isRequired": false,
        "description": "Use the provided child element as the default rendered element, combining their props and behavior."
      }
    }
  },
  "ItemDescription": {
    "props": {
      "as": {
        "type": "React.ElementType",
        "isRequired": false,
        "description": "The underlying element to render."
      },
      "asChild": {
        "type": "boolean",
        "isRequired": false,
        "description": "Use the provided child element as the default rendered element, combining their props and behavior."
      }
    }
  },
  "Indicator": {
    "props": {
      "asChild": {
        "type": "boolean",
        "isRequired": false,
        "description": "Use the provided child element as the default rendered element, combining their props and behavior."
      }
    },
    "element": "HTMLDivElement"
  },
  "ItemHiddenInput": {
    "props": {
      "asChild": {
        "type": "boolean",
        "isRequired": false,
        "description": "Use the provided child element as the default rendered element, combining their props and behavior."
      }
    },
    "element": "HTMLInputElement"
  }
}