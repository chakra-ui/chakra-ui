{
  "ClipboardControl": {
    "props": {}
  },
  "ClipboardIndicator": {
    "props": {}
  },
  "ClipboardRoot": {
    "props": {}
  },
  "ClipboardRootProvider": {
    "props": {}
  },
  "ClipboardLabel": {
    "props": {}
  },
  "ClipboardValueText": {
    "props": {}
  },
  "ClipboardTrigger": {
    "props": {}
  },
  "ClipboardInput": {
    "props": {}
  },
  "UseClipboard": {
    "props": {}
  },
  "Clipboard": {
    "props": {
      "as": {
        "type": "React.ElementType",
        "isRequired": false,
        "description": "The underlying element to render."
      },
      "asChild": {
        "type": "boolean",
        "isRequired": false,
        "description": "Use the provided child element as the default rendered element, combining their props and behavior."
      }
    }
  },
  "Control": {
    "props": {
      "asChild": {
        "type": "boolean",
        "isRequired": false,
        "description": "Use the provided child element as the default rendered element, combining their props and behavior."
      }
    },
    "element": "HTMLDivElement"
  },
  "Indicator": {
    "props": {
      "asChild": {
        "type": "boolean",
        "isRequired": false,
        "description": "Use the provided child element as the default rendered element, combining their props and behavior."
      },
      "copied": {
        "type": "string | number | bigint | boolean | ReactElement<unknown, string | JSXElementConstructor<any>> | Iterable<ReactNode> | ReactPortal | Promise<...>",
        "isRequired": false
      }
    },
    "element": "HTMLDivElement"
  },
  "Input": {
    "props": {
      "asChild": {
        "type": "boolean",
        "isRequired": false,
        "description": "Use the provided child element as the default rendered element, combining their props and behavior."
      }
    },
    "element": "HTMLInputElement"
  },
  "Label": {
    "props": {
      "asChild": {
        "type": "boolean",
        "isRequired": false,
        "description": "Use the provided child element as the default rendered element, combining their props and behavior."
      }
    },
    "element": "HTMLLabelElement"
  },
  "Root": {
    "props": {
      "asChild": {
        "type": "boolean",
        "isRequired": false,
        "description": "Use the provided child element as the default rendered element, combining their props and behavior."
      },
      "defaultValue": {
        "type": "string",
        "isRequired": false,
        "description": "The initial value to be copied to the clipboard when rendered.\nUse when you don't need to control the value of the clipboard."
      },
      "id": {
        "type": "string",
        "isRequired": false,
        "description": "The unique identifier of the machine."
      },
      "ids": {
        "type": "Partial<{ root: string; input: string; label: string }>",
        "isRequired": false,
        "description": "The ids of the elements in the clipboard. Useful for composition."
      },
      "onStatusChange": {
        "type": "(details: CopyStatusDetails) => void",
        "isRequired": false,
        "description": "The function to be called when the value is copied to the clipboard"
      },
      "onValueChange": {
        "type": "(details: ValueChangeDetails) => void",
        "isRequired": false,
        "description": "The function to be called when the value changes"
      },
      "timeout": {
        "type": "number",
        "isRequired": false,
        "defaultValue": "3000",
        "description": "The timeout for the copy operation"
      },
      "value": {
        "type": "string",
        "isRequired": false,
        "description": "The controlled value of the clipboard"
      }
    },
    "element": "HTMLDivElement"
  },
  "RootProvider": {
    "props": {
      "value": {
        "type": "UseClipboardReturn",
        "isRequired": true
      },
      "asChild": {
        "type": "boolean",
        "isRequired": false,
        "description": "Use the provided child element as the default rendered element, combining their props and behavior."
      }
    },
    "element": "HTMLDivElement"
  },
  "Trigger": {
    "props": {
      "asChild": {
        "type": "boolean",
        "isRequired": false,
        "description": "Use the provided child element as the default rendered element, combining their props and behavior."
      }
    },
    "element": "HTMLButtonElement"
  },
  "ValueText": {
    "props": {
      "asChild": {
        "type": "boolean",
        "isRequired": false,
        "description": "Use the provided child element as the default rendered element, combining their props and behavior."
      }
    },
    "element": "HTMLDivElement"
  }
}