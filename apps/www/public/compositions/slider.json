{
  "type": "composition",
  "npmDependencies": [],
  "fileDependencies": [],
  "id": "slider",
  "file": {
    "name": "slider.tsx",
    "content": "import { Slider as ChakraSlider } from \"@chakra-ui/react\"\nimport { forwardRef } from \"react\"\n\nexport interface SliderProps extends ChakraSlider.RootProps {\n  marks?: Array<number | { value: number; label: React.ReactNode }>\n  label?: React.ReactNode\n}\n\nexport const Slider = forwardRef<HTMLDivElement, SliderProps>(\n  function Slider(props, ref) {\n    const { marks: marksProp, label, ...rest } = props\n    const value = props.defaultValue ?? props.value\n\n    const marks = marksProp?.map((mark) => {\n      if (typeof mark === \"number\") return { value: mark, label: undefined }\n      return mark\n    })\n\n    const hasMarkLabel = !!marks?.some((mark) => mark.label)\n\n    return (\n      <ChakraSlider.Root ref={ref} thumbAlignment=\"center\" {...rest}>\n        {label && (\n          <ChakraSlider.Label fontWeight=\"medium\">{label}</ChakraSlider.Label>\n        )}\n        <ChakraSlider.Control mb={hasMarkLabel ? \"4\" : undefined}>\n          <ChakraSlider.Track>\n            <ChakraSlider.Range />\n          </ChakraSlider.Track>\n          {value?.map((_, index) => (\n            <ChakraSlider.Thumb key={index} index={index}>\n              <ChakraSlider.HiddenInput />\n            </ChakraSlider.Thumb>\n          ))}\n        </ChakraSlider.Control>\n        {marks?.length && (\n          <ChakraSlider.MarkerGroup>\n            {marks.map((mark, index) => {\n              const value = typeof mark === \"number\" ? mark : mark.value\n              const label = typeof mark === \"number\" ? undefined : mark.label\n              return (\n                <ChakraSlider.Marker key={index} value={value}>\n                  <ChakraSlider.MarkerIndicator />\n                  {label}\n                </ChakraSlider.Marker>\n              )\n            })}\n          </ChakraSlider.MarkerGroup>\n        )}\n      </ChakraSlider.Root>\n    )\n  },\n)\n"
  },
  "component": "Slider"
}