{
  "type": "composition",
  "npmDependencies": [],
  "fileDependencies": [],
  "id": "tag",
  "file": {
    "name": "tag.tsx",
    "content": "import { Tag as ChakraTag } from \"@chakra-ui/react\"\nimport { forwardRef } from \"react\"\n\nexport interface TagProps extends ChakraTag.RootProps {\n  startElement?: React.ReactNode\n  endElement?: React.ReactNode\n  onClose?: VoidFunction\n  closable?: boolean\n}\n\nexport const Tag = forwardRef<HTMLSpanElement, TagProps>(\n  function Tag(props, ref) {\n    const {\n      startElement,\n      endElement,\n      onClose,\n      closable = !!onClose,\n      children,\n      ...rest\n    } = props\n\n    return (\n      <ChakraTag.Root ref={ref} {...rest}>\n        {startElement && (\n          <ChakraTag.StartElement>{startElement}</ChakraTag.StartElement>\n        )}\n        <ChakraTag.Label>{children}</ChakraTag.Label>\n        {endElement && (\n          <ChakraTag.EndElement>{endElement}</ChakraTag.EndElement>\n        )}\n        {closable && (\n          <ChakraTag.EndElement>\n            <ChakraTag.CloseTrigger onClick={onClose} />\n          </ChakraTag.EndElement>\n        )}\n      </ChakraTag.Root>\n    )\n  },\n)\n\nTag.displayName = 'Tag';\n"
  },
  "component": "Tag"
}
