{
  "type": "composition",
  "npmDependencies": [
    "react-icons"
  ],
  "fileDependencies": [],
  "id": "menu",
  "file": {
    "name": "menu.tsx",
    "content": "\"use client\"\n\nimport { AbsoluteCenter, Menu as ChakraMenu, Portal } from \"@chakra-ui/react\"\nimport { forwardRef } from \"react\"\nimport { LuCheck, LuChevronRight } from \"react-icons/lu\"\n\ninterface MenuContentProps extends ChakraMenu.ContentProps {\n  portalled?: boolean\n  containerRef?: React.RefObject<HTMLElement>\n}\n\nexport const MenuContent = forwardRef<HTMLDivElement, MenuContentProps>(\n  function MenuContent(props, ref) {\n    const { portalled = true, containerRef, ...rest } = props\n\n    return (\n      <Portal disabled={!portalled} container={containerRef}>\n        <ChakraMenu.Positioner>\n          <ChakraMenu.Content ref={ref} {...rest} />\n        </ChakraMenu.Positioner>\n      </Portal>\n    )\n  },\n)\n\nexport const MenuArrow = (props: ChakraMenu.ArrowProps) => {\n  return (\n    <ChakraMenu.Arrow {...props}>\n      <ChakraMenu.ArrowTip />\n    </ChakraMenu.Arrow>\n  )\n}\n\nexport const MenuCheckboxItem = (props: ChakraMenu.CheckboxItemProps) => {\n  return (\n    <ChakraMenu.CheckboxItem {...props}>\n      <ChakraMenu.ItemIndicator hidden={false}>\n        <LuCheck />\n      </ChakraMenu.ItemIndicator>\n      {props.children}\n    </ChakraMenu.CheckboxItem>\n  )\n}\n\nexport const MenuRadioItem = (props: ChakraMenu.RadioItemProps) => {\n  const { children, ...rest } = props\n  return (\n    <ChakraMenu.RadioItem ps=\"8\" {...rest}>\n      <AbsoluteCenter axis=\"horizontal\" left=\"4\" asChild>\n        <ChakraMenu.ItemIndicator>\n          <LuCheck />\n        </ChakraMenu.ItemIndicator>\n      </AbsoluteCenter>\n      <ChakraMenu.ItemText>{children}</ChakraMenu.ItemText>\n    </ChakraMenu.RadioItem>\n  )\n}\n\nexport const MenuTrigger = (props: ChakraMenu.TriggerProps) => {\n  return <ChakraMenu.Trigger {...props} />\n}\n\nexport const MenuItemGroup = (props: ChakraMenu.ItemGroupProps) => {\n  const { title, children, ...rest } = props\n  return (\n    <ChakraMenu.ItemGroup {...rest}>\n      <ChakraMenu.ItemGroupLabel userSelect=\"none\">\n        {title}\n      </ChakraMenu.ItemGroupLabel>\n      {children}\n    </ChakraMenu.ItemGroup>\n  )\n}\n\nexport const MenuRoot = ChakraMenu.Root\nexport const MenuSeparator = ChakraMenu.Separator\nexport const MenuItem = ChakraMenu.Item\nexport const MenuItemCommand = ChakraMenu.ItemCommand\n\nexport interface MenuTriggerItemProps extends ChakraMenu.ItemProps {\n  startIcon?: React.ReactNode\n}\n\nexport const MenuTriggerItem = forwardRef<HTMLDivElement, MenuTriggerItemProps>(\n  function MenuTriggerItem(props, ref) {\n    const { startIcon, children, ...rest } = props\n    return (\n      <ChakraMenu.TriggerItem ref={ref} {...rest}>\n        {startIcon}\n        {children}\n        <LuChevronRight />\n      </ChakraMenu.TriggerItem>\n    )\n  },\n)\n\nexport const MenuRadioItemGroup = ChakraMenu.RadioItemGroup\nexport const MenuContextTrigger = ChakraMenu.ContextTrigger\n"
  },
  "component": "Menu"
}