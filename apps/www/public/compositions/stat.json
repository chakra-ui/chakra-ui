{
  "type": "composition",
  "npmDependencies": ["react-icons"],
  "fileDependencies": ["compositions/ui/toggle-tip"],
  "id": "stat",
  "file": {
    "name": "stat.tsx",
    "content": "import {\n  Badge,\n  type BadgeProps,\n  Stat as ChakraStat,\n  FormatNumber,\n  IconButton,\n} from \"@chakra-ui/react\"\nimport { ToggleTip } from \"./toggle-tip\"\nimport { forwardRef } from \"react\"\nimport { HiOutlineInformationCircle } from \"react-icons/hi\"\n\ninterface StatLabelProps extends ChakraStat.LabelProps {\n  info?: React.ReactNode\n}\n\nexport const StatLabel = forwardRef<HTMLDivElement, StatLabelProps>(\n  function StatLabel(props, ref) {\n    const { info, children, ...rest } = props\n    return (\n      <ChakraStat.Label {...rest} ref={ref}>\n        {children}\n        {info && (\n          <ToggleTip content={info}>\n            <IconButton variant=\"ghost\" aria-label=\"info\" size=\"2xs\">\n              <HiOutlineInformationCircle />\n            </IconButton>\n          </ToggleTip>\n        )}\n      </ChakraStat.Label>\n    )\n  },\n)\n\ninterface StatValueTextProps extends ChakraStat.ValueTextProps {\n  value?: number\n  formatOptions?: Intl.NumberFormatOptions\n}\n\nexport const StatValueText = forwardRef<HTMLDivElement, StatValueTextProps>(\n  function StatValueText(props, ref) {\n    const { value, formatOptions, children, ...rest } = props\n    return (\n      <ChakraStat.ValueText {...rest} ref={ref}>\n        {children ||\n          (value != null && <FormatNumber value={value} {...formatOptions} />)}\n      </ChakraStat.ValueText>\n    )\n  },\n)\n\nexport const StatUpTrend = forwardRef<HTMLDivElement, BadgeProps>(\n  function StatUpTrend(props, ref) {\n    return (\n      <Badge colorPalette=\"green\" gap=\"0\" {...props} ref={ref}>\n        <ChakraStat.UpIndicator />\n        {props.children}\n      </Badge>\n    )\n  },\n)\n\nexport const StatDownTrend = forwardRef<HTMLDivElement, BadgeProps>(\n  function StatDownTrend(props, ref) {\n    return (\n      <Badge colorPalette=\"red\" gap=\"0\" {...props} ref={ref}>\n        <ChakraStat.DownIndicator />\n        {props.children}\n      </Badge>\n    )\n  },\n)\n\nexport const StatRoot = ChakraStat.Root\nexport const StatHelpText = ChakraStat.HelpText\nexport const StatValueUnit = ChakraStat.ValueUnit\n\nStatLabel.displayName = 'StatLabel';\nStatValueText.displayName = 'StatValueText';\nStatUpTrend.displayName = 'StatUpTrend';\nStatDownTrend.displayName = 'StatDownTrend';\n"
  },
  "component": "Stat"
}
