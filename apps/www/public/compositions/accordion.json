{
  "type": "composition",
  "npmDependencies": [
    "react-icons"
  ],
  "fileDependencies": [],
  "id": "accordion",
  "file": {
    "name": "accordion.tsx",
    "content": "import type { IconProps } from \"@chakra-ui/react\"\nimport { Accordion, HStack, Icon } from \"@chakra-ui/react\"\nimport { forwardRef } from \"react\"\nimport { LuChevronDown } from \"react-icons/lu\"\n\ninterface AccordionItemTriggerProps extends Accordion.ItemTriggerProps {}\n\nexport const AccordionItemTrigger = forwardRef<\n  HTMLButtonElement,\n  AccordionItemTriggerProps\n>(function AccordionItemTrigger(props, ref) {\n  const { children, ...rest } = props\n  return (\n    <Accordion.ItemTrigger {...rest} ref={ref}>\n      <HStack gap=\"4\" flex=\"1\" textAlign=\"start\" width=\"full\">\n        {children}\n      </HStack>\n      <Accordion.ItemIndicator>\n        <LuChevronDown />\n      </Accordion.ItemIndicator>\n    </Accordion.ItemTrigger>\n  )\n})\n\ninterface AccordionItemContentProps extends Accordion.ItemContentProps {}\n\nexport const AccordionItemContent = forwardRef<\n  HTMLDivElement,\n  AccordionItemContentProps\n>((props, ref) => {\n  return (\n    <Accordion.ItemContent>\n      <Accordion.ItemBody {...props} ref={ref} />\n    </Accordion.ItemContent>\n  )\n})\n\nAccordionItemContent.displayName = \"AccordionItemContent\"\n\nexport const AccordionItemIcon = (props: IconProps) => {\n  return <Icon color=\"fg.muted\" fontSize=\"lg\" {...props} asChild />\n}\n\nexport const AccordionRoot = Accordion.Root\nexport const AccordionItem = Accordion.Item\n"
  },
  "component": "Accordion"
}