{
  "type": "composition",
  "npmDependencies": ["react-icons"],
  "fileDependencies": [],
  "id": "accordion",
  "file": {
    "name": "accordion.tsx",
    "content": "import { Accordion, HStack } from \"@chakra-ui/react\"\nimport { forwardRef } from \"react\"\nimport { LuChevronDown } from \"react-icons/lu\"\n\ninterface AccordionItemTriggerProps extends Accordion.ItemTriggerProps {\n  indicatorPlacement?: \"start\" | \"end\"\n}\n\nexport const AccordionItemTrigger = forwardRef<\n  HTMLButtonElement,\n  AccordionItemTriggerProps\n>(function AccordionItemTrigger(props, ref) {\n  const { children, indicatorPlacement = \"end\", ...rest } = props\n  return (\n    <Accordion.ItemTrigger {...rest} ref={ref}>\n      {indicatorPlacement === \"start\" && (\n        <Accordion.ItemIndicator rotate={{ base: \"-90deg\", _open: \"0deg\" }}>\n          <LuChevronDown />\n        </Accordion.ItemIndicator>\n      )}\n      <HStack gap=\"4\" flex=\"1\" textAlign=\"start\" width=\"full\">\n        {children}\n      </HStack>\n      {indicatorPlacement === \"end\" && (\n        <Accordion.ItemIndicator>\n          <LuChevronDown />\n        </Accordion.ItemIndicator>\n      )}\n    </Accordion.ItemTrigger>\n  )\n})\nAccordionItemTrigger.displayName = \"AccordionItemTrigger\"\n\ninterface AccordionItemContentProps extends Accordion.ItemContentProps {}\n\nexport const AccordionItemContent = forwardRef<\n  HTMLDivElement,\n  AccordionItemContentProps\n>(function AccordionItemContent(props, ref) {\n  return (\n    <Accordion.ItemContent>\n      <Accordion.ItemBody {...props} ref={ref} />\n    </Accordion.ItemContent>\n  )\n})\nAccordionItemContent.displayName = \"AccordionItemContent\"\n\nexport const AccordionRoot = Accordion.Root\nexport const AccordionItem = Accordion.Item\n"
  },
  "component": "Accordion"
}
