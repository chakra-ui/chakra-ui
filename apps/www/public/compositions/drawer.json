{
  "type": "composition",
  "npmDependencies": [],
  "fileDependencies": [
    "compositions/ui/close-button"
  ],
  "id": "drawer",
  "file": {
    "name": "drawer.tsx",
    "content": "import { Drawer as ChakraDrawer, Portal } from \"@chakra-ui/react\"\nimport { CloseButton } from \"./close-button\"\nimport * as React from \"react\"\n\ninterface DrawerContentProps extends ChakraDrawer.ContentProps {\n  portalled?: boolean\n  portalRef?: React.RefObject<HTMLElement | null>\n  offset?: ChakraDrawer.ContentProps[\"padding\"]\n}\n\nexport const DrawerContent = React.forwardRef<\n  HTMLDivElement,\n  DrawerContentProps\n>(function DrawerContent(props, ref) {\n  const { children, portalled = true, portalRef, offset, ...rest } = props\n  return (\n    <Portal disabled={!portalled} container={portalRef}>\n      <ChakraDrawer.Positioner padding={offset}>\n        <ChakraDrawer.Content ref={ref} {...rest} asChild={false}>\n          {children}\n        </ChakraDrawer.Content>\n      </ChakraDrawer.Positioner>\n    </Portal>\n  )\n})\n\nexport const DrawerCloseTrigger = React.forwardRef<\n  HTMLButtonElement,\n  ChakraDrawer.CloseTriggerProps\n>(function DrawerCloseTrigger(props, ref) {\n  return (\n    <ChakraDrawer.CloseTrigger\n      position=\"absolute\"\n      top=\"2\"\n      insetEnd=\"2\"\n      {...props}\n      asChild\n    >\n      <CloseButton size=\"sm\" ref={ref} />\n    </ChakraDrawer.CloseTrigger>\n  )\n})\n\nexport const DrawerTrigger = ChakraDrawer.Trigger\nexport const DrawerRoot = ChakraDrawer.Root\nexport const DrawerFooter = ChakraDrawer.Footer\nexport const DrawerHeader = ChakraDrawer.Header\nexport const DrawerBody = ChakraDrawer.Body\nexport const DrawerBackdrop = ChakraDrawer.Backdrop\nexport const DrawerDescription = ChakraDrawer.Description\nexport const DrawerTitle = ChakraDrawer.Title\nexport const DrawerActionTrigger = ChakraDrawer.ActionTrigger\n"
  },
  "component": "Drawer"
}