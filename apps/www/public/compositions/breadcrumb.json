{
  "type": "composition",
  "npmDependencies": [],
  "fileDependencies": [],
  "id": "breadcrumb",
  "file": {
    "name": "breadcrumb.tsx",
    "content": "import {\n  BreadcrumbList,\n  Breadcrumb as ChakraBreadcrumb,\n  type SystemStyleObject,\n} from \"@chakra-ui/react\"\nimport { Children, Fragment, forwardRef, isValidElement } from \"react\"\n\nexport interface BreadcrumbRootProps extends ChakraBreadcrumb.RootProps {\n  separator?: React.ReactNode\n  separatorGap?: SystemStyleObject[\"gap\"]\n}\n\nexport const BreadcrumbRoot = forwardRef<HTMLDivElement, BreadcrumbRootProps>(\n  function BreadcrumbRoot(props, ref) {\n    const { separator, separatorGap, children, ...rest } = props\n    const validChildren = Children.toArray(children).filter(isValidElement)\n    return (\n      <ChakraBreadcrumb.Root ref={ref} {...rest}>\n        <BreadcrumbList gap={separatorGap}>\n          {validChildren.map((child, index) => {\n            const last = index === validChildren.length - 1\n            return (\n              <Fragment key={index}>\n                <ChakraBreadcrumb.Item>{child}</ChakraBreadcrumb.Item>\n                {!last && (\n                  <ChakraBreadcrumb.Separator>\n                    {separator}\n                  </ChakraBreadcrumb.Separator>\n                )}\n              </Fragment>\n            )\n          })}\n        </BreadcrumbList>\n      </ChakraBreadcrumb.Root>\n    )\n  },\n)\n\nexport const BreadcrumbLink = ChakraBreadcrumb.Link\nexport const BreadcrumbCurrentLink = ChakraBreadcrumb.CurrentLink\nexport const BreadcrumbEllipsis = ChakraBreadcrumb.Ellipsis\n"
  },
  "component": "Breadcrumb"
}