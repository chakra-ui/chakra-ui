{
  "type": "composition",
  "npmDependencies": [],
  "fileDependencies": [],
  "id": "checkbox-card",
  "file": {
    "name": "checkbox-card.tsx",
    "content": "import {\n  CheckboxCard as ChakraCheckboxCard,\n  Icon,\n  Stack,\n  Text,\n} from \"@chakra-ui/react\"\nimport { forwardRef } from \"react\"\n\nexport interface CheckboxCardProps extends ChakraCheckboxCard.RootProps {\n  icon?: React.ReactElement\n  iconColor?: ChakraCheckboxCard.RootProps[\"color\"]\n  label?: React.ReactNode\n  description?: React.ReactNode\n  children?: React.ReactNode\n  addon?: React.ReactNode\n  indicator?: React.ReactNode | null\n  indicatorPlacement?: \"start\" | \"end\" | \"inside\"\n  inputProps?: React.InputHTMLAttributes<HTMLInputElement>\n  align?: ChakraCheckboxCard.ControlProps[\"alignItems\"]\n  justify?: ChakraCheckboxCard.ControlProps[\"justifyContent\"]\n  vertical?: boolean\n}\n\nexport const CheckboxCard = forwardRef<HTMLInputElement, CheckboxCardProps>(\n  function CheckboxCard(props, ref) {\n    const {\n      inputProps,\n      label,\n      description,\n      icon,\n      iconColor = \"fg.subtle\",\n      addon,\n      indicator = <ChakraCheckboxCard.Indicator />,\n      indicatorPlacement = \"end\",\n      align = \"start\",\n      justify,\n      vertical,\n      ...rest\n    } = props\n\n    const hasContent = label || description || icon\n\n    return (\n      <ChakraCheckboxCard.Root {...rest}>\n        <ChakraCheckboxCard.HiddenInput ref={ref} {...inputProps} />\n        <ChakraCheckboxCard.Control\n          alignItems={align}\n          justifyContent={justify}\n          flexDirection={vertical ? \"column\" : \"row\"}\n        >\n          {indicatorPlacement === \"start\" && indicator}\n          <Stack\n            hidden={!hasContent}\n            gap=\"1\"\n            flex=\"1\"\n            alignItems={align}\n            justifyContent={justify}\n          >\n            {icon && (\n              <Icon asChild fontSize=\"2xl\" color={iconColor} mb=\"2\">\n                {icon}\n              </Icon>\n            )}\n            {label && (\n              <ChakraCheckboxCard.Label>{label}</ChakraCheckboxCard.Label>\n            )}\n            {description && (\n              <Text opacity=\"0.72\" textStyle=\"sm\">\n                {description}\n              </Text>\n            )}\n            {indicatorPlacement === \"inside\" && indicator}\n          </Stack>\n          {indicatorPlacement === \"end\" && indicator}\n        </ChakraCheckboxCard.Control>\n        {addon && <ChakraCheckboxCard.Addon>{addon}</ChakraCheckboxCard.Addon>}\n      </ChakraCheckboxCard.Root>\n    )\n  },\n)\n\nexport const CheckboxCardIndicator = ChakraCheckboxCard.Indicator\n"
  },
  "component": "CheckboxCard"
}