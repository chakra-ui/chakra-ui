{
  "type": "composition",
  "npmDependencies": ["react-icons"],
  "fileDependencies": [],
  "id": "stepper-input",
  "file": {
    "name": "stepper-input.tsx",
    "content": "import { HStack, IconButton, NumberInput } from \"@chakra-ui/react\"\nimport { forwardRef } from \"react\"\nimport { LuMinus, LuPlus } from \"react-icons/lu\"\n\nexport interface StepperInputProps extends NumberInput.RootProps {\n  label?: React.ReactNode\n}\n\nexport const StepperInput = forwardRef<HTMLDivElement, StepperInputProps>(\n  function StepperInput(props, ref) {\n    const { label, ...rest } = props\n    return (\n      <NumberInput.Root {...rest} unstyled ref={ref}>\n        {label && <NumberInput.Label>{label}</NumberInput.Label>}\n        <HStack gap=\"2\">\n          <DecrementTrigger />\n          <NumberInput.ValueText textAlign=\"center\" fontSize=\"lg\" minW=\"3ch\" />\n          <IncrementTrigger />\n        </HStack>\n      </NumberInput.Root>\n    )\n  },\n)\n\nconst DecrementTrigger = forwardRef<\n  HTMLButtonElement,\n  NumberInput.DecrementTriggerProps\n>(function DecrementTrigger(props, ref) {\n  return (\n    <NumberInput.DecrementTrigger {...props} asChild ref={ref}>\n      <IconButton variant=\"outline\" size=\"sm\">\n        <LuMinus />\n      </IconButton>\n    </NumberInput.DecrementTrigger>\n  )\n})\n\nconst IncrementTrigger = forwardRef<\n  HTMLButtonElement,\n  NumberInput.IncrementTriggerProps\n>(function IncrementTrigger(props, ref) {\n  return (\n    <NumberInput.IncrementTrigger {...props} asChild ref={ref}>\n      <IconButton variant=\"outline\" size=\"sm\">\n        <LuPlus />\n      </IconButton>\n    </NumberInput.IncrementTrigger>\n  )\n})\n\nStepperInput.displayName = 'StepperInput';\n"
  },
  "component": "StepperInput"
}
