{
  "type": "composition",
  "npmDependencies": [],
  "fileDependencies": [
    "compositions/ui/close-button"
  ],
  "id": "popover",
  "file": {
    "name": "popover.tsx",
    "content": "import { Popover as ChakraPopover, Portal } from \"@chakra-ui/react\"\nimport { CloseButton } from \"./close-button\"\nimport * as React from \"react\"\n\ninterface PopoverContentProps extends ChakraPopover.ContentProps {\n  portalled?: boolean\n  portalRef?: React.RefObject<HTMLElement | null>\n}\n\nexport const PopoverContent = React.forwardRef<\n  HTMLDivElement,\n  PopoverContentProps\n>(function PopoverContent(props, ref) {\n  const { portalled = true, portalRef, ...rest } = props\n  return (\n    <Portal disabled={!portalled} container={portalRef}>\n      <ChakraPopover.Positioner>\n        <ChakraPopover.Content ref={ref} {...rest} />\n      </ChakraPopover.Positioner>\n    </Portal>\n  )\n})\n\nexport const PopoverArrow = React.forwardRef<\n  HTMLDivElement,\n  ChakraPopover.ArrowProps\n>(function PopoverArrow(props, ref) {\n  return (\n    <ChakraPopover.Arrow {...props} ref={ref}>\n      <ChakraPopover.ArrowTip />\n    </ChakraPopover.Arrow>\n  )\n})\n\nexport const PopoverCloseTrigger = React.forwardRef<\n  HTMLButtonElement,\n  ChakraPopover.CloseTriggerProps\n>(function PopoverCloseTrigger(props, ref) {\n  return (\n    <ChakraPopover.CloseTrigger\n      position=\"absolute\"\n      top=\"1\"\n      insetEnd=\"1\"\n      {...props}\n      asChild\n      ref={ref}\n    >\n      <CloseButton size=\"sm\" />\n    </ChakraPopover.CloseTrigger>\n  )\n})\n\nexport const PopoverTitle = ChakraPopover.Title\nexport const PopoverDescription = ChakraPopover.Description\nexport const PopoverFooter = ChakraPopover.Footer\nexport const PopoverHeader = ChakraPopover.Header\nexport const PopoverRoot = ChakraPopover.Root\nexport const PopoverBody = ChakraPopover.Body\nexport const PopoverTrigger = ChakraPopover.Trigger\n"
  },
  "component": "Popover"
}