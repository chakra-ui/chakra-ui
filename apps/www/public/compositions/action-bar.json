{
  "type": "composition",
  "npmDependencies": [],
  "fileDependencies": [
    "compositions/ui/close-button"
  ],
  "id": "action-bar",
  "file": {
    "name": "action-bar.tsx",
    "content": "import { ActionBar as ChakraActionBar, Portal } from \"@chakra-ui/react\"\nimport { CloseButton } from \"./close-button\"\nimport { forwardRef } from \"react\"\n\ninterface ActionBarContentProps extends ChakraActionBar.ContentProps {\n  portalled?: boolean\n  containerRef?: React.RefObject<HTMLElement>\n  showArrow?: boolean\n}\n\nexport const ActionBarContent = forwardRef<\n  HTMLDivElement,\n  ActionBarContentProps\n>(function ActionBarContent(props, ref) {\n  const { children, portalled = true, containerRef, showArrow, ...rest } = props\n\n  return (\n    <Portal disabled={!portalled} container={containerRef}>\n      <ChakraActionBar.Positioner>\n        <ChakraActionBar.Content ref={ref} {...rest} asChild={false}>\n          {children}\n        </ChakraActionBar.Content>\n      </ChakraActionBar.Positioner>\n    </Portal>\n  )\n})\n\nexport const ActionBarRoot = ChakraActionBar.Root\nexport const ActionBarSelectionTrigger = ChakraActionBar.SelectionTrigger\nexport const ActionBarSeparator = ChakraActionBar.Separator\n\nexport const ActionBarCloseTrigger = (\n  props: ChakraActionBar.CloseTriggerProps,\n) => {\n  return (\n    <ChakraActionBar.CloseTrigger {...props} asChild>\n      <CloseButton size=\"sm\" />\n    </ChakraActionBar.CloseTrigger>\n  )\n}\n"
  },
  "component": "ActionBar"
}