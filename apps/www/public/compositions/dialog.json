{
  "type": "composition",
  "npmDependencies": [],
  "fileDependencies": [
    "compositions/ui/close-button"
  ],
  "id": "dialog",
  "file": {
    "name": "dialog.tsx",
    "content": "import { Dialog as ChakraDialog, Heading, Portal } from \"@chakra-ui/react\"\nimport { CloseButton } from \"./close-button\"\nimport { forwardRef } from \"react\"\n\ninterface DialogContentProps extends ChakraDialog.ContentProps {\n  portalled?: boolean\n  portalRef?: React.RefObject<HTMLElement>\n  backdrop?: boolean\n}\n\nexport const DialogContent = forwardRef<HTMLDivElement, DialogContentProps>(\n  function DialogContent(props, ref) {\n    const {\n      children,\n      portalled = true,\n      portalRef,\n      backdrop = true,\n      ...rest\n    } = props\n\n    return (\n      <Portal disabled={!portalled} container={portalRef}>\n        {backdrop && <ChakraDialog.Backdrop />}\n        <ChakraDialog.Positioner>\n          <ChakraDialog.Content ref={ref} {...rest} asChild={false}>\n            {children}\n          </ChakraDialog.Content>\n        </ChakraDialog.Positioner>\n      </Portal>\n    )\n  },\n)\n\nexport const DialogTrigger = (props: ChakraDialog.TriggerProps) => {\n  return <ChakraDialog.Trigger {...props} />\n}\n\nexport const DialogCloseTrigger = forwardRef<\n  HTMLButtonElement,\n  ChakraDialog.CloseTriggerProps\n>(function DialogCloseTrigger(props, ref) {\n  return (\n    <ChakraDialog.CloseTrigger\n      position=\"absolute\"\n      top=\"2\"\n      insetEnd=\"2\"\n      {...props}\n      asChild\n    >\n      <CloseButton size=\"sm\" ref={ref}>\n        {props.children}\n      </CloseButton>\n    </ChakraDialog.CloseTrigger>\n  )\n})\n\nexport const DialogTitle = forwardRef<\n  HTMLHeadingElement,\n  ChakraDialog.TitleProps\n>(function DialogTitle(props, ref) {\n  return (\n    <ChakraDialog.Title {...props} asChild>\n      <Heading as=\"h2\" size=\"lg\" lineHeight=\"1.2\" ref={ref}>\n        {props.children}\n      </Heading>\n    </ChakraDialog.Title>\n  )\n})\n\nexport const DialogDescription = forwardRef<\n  HTMLParagraphElement,\n  ChakraDialog.DescriptionProps\n>(function DialogDescription(props, ref) {\n  return <ChakraDialog.Description color=\"fg.subtle\" {...props} ref={ref} />\n})\n\nexport const DialogRoot = ChakraDialog.Root\nexport const DialogFooter = ChakraDialog.Footer\nexport const DialogHeader = ChakraDialog.Header\nexport const DialogBody = ChakraDialog.Body\nexport const DialogBackdrop = ChakraDialog.Backdrop\n"
  },
  "component": "Dialog"
}