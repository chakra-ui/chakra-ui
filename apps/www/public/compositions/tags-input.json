{
  "type": "composition",
  "npmDependencies": [],
  "fileDependencies": [
    "compositions/ui/close-button"
  ],
  "id": "tags-input",
  "file": {
    "name": "tags-input.tsx",
    "content": "\"use client\"\n\nimport { TagsInput as ChakraTagsInput } from \"@chakra-ui/react\"\nimport { CloseButton } from \"./close-button\"\nimport * as React from \"react\"\n\ninterface TagsInputControlProps extends ChakraTagsInput.ControlProps {\n  clearable?: boolean\n}\n\nexport const TagsInputControl = React.forwardRef<\n  HTMLDivElement,\n  TagsInputControlProps\n>(function TagsInputControl(props, ref) {\n  const { children, clearable, ...rest } = props\n  return (\n    <ChakraTagsInput.Control {...rest} ref={ref}>\n      {children}\n      {clearable && <TagsInputClearTrigger />}\n    </ChakraTagsInput.Control>\n  )\n})\n\nconst TagsInputClearTrigger = React.forwardRef<\n  HTMLButtonElement,\n  ChakraTagsInput.ClearTriggerProps\n>(function TagsInputClearTrigger(props, ref) {\n  return (\n    <ChakraTagsInput.ClearTrigger asChild {...props} ref={ref}>\n      <CloseButton\n        size=\"xs\"\n        variant=\"plain\"\n        focusVisibleRing=\"inside\"\n        focusRingWidth=\"2px\"\n        pointerEvents=\"auto\"\n      />\n    </ChakraTagsInput.ClearTrigger>\n  )\n})\n\nexport const TagsInputItem = React.forwardRef<\n  HTMLDivElement,\n  ChakraTagsInput.ItemProps\n>(function TagsInputItem(props, ref) {\n  const { children, ...rest } = props\n  return (\n    <ChakraTagsInput.Item {...rest} ref={ref}>\n      <ChakraTagsInput.ItemText>{children}</ChakraTagsInput.ItemText>\n      <ChakraTagsInput.ItemDeleteTrigger asChild>\n        <CloseButton\n          size=\"2xs\"\n          variant=\"plain\"\n          focusVisibleRing=\"inside\"\n          focusRingWidth=\"2px\"\n          pointerEvents=\"auto\"\n        />\n      </ChakraTagsInput.ItemDeleteTrigger>\n    </ChakraTagsInput.Item>\n  )\n})\n\nexport const TagsInputRoot = React.forwardRef<\n  HTMLDivElement,\n  ChakraTagsInput.RootProps\n>(function TagsInputRoot(props, ref) {\n  return <ChakraTagsInput.Root {...props} ref={ref} />\n}) as ChakraTagsInput.RootProps\n\nexport const TagsInputItemText = ChakraTagsInput.ItemText\nexport const TagsInputItemPreview = ChakraTagsInput.ItemPreview\nexport const TagsInputItemInput = ChakraTagsInput.ItemInput\nexport const TagsInputItemContext = ChakraTagsInput.ItemContext\nexport const TagsInputRootProvider = ChakraTagsInput.RootProvider\nexport const TagsInputPropsProvider = ChakraTagsInput.PropsProvider\nexport const TagsInputLabel = ChakraTagsInput.Label\nexport const TagsInputInput = ChakraTagsInput.Input\nexport const TagsInputContext = ChakraTagsInput.Context\nexport const TagsInputHiddenInput = ChakraTagsInput.HiddenInput\n"
  },
  "component": "TagsInput"
}