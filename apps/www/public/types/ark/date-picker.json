{
  "ClearTrigger": {
    "props": {
      "asChild": {
        "type": "boolean",
        "isRequired": false,
        "description": "Use the provided child element as the default rendered element, combining their props and behavior."
      }
    },
    "element": "HTMLButtonElement"
  },
  "Content": {
    "props": {
      "asChild": {
        "type": "boolean",
        "isRequired": false,
        "description": "Use the provided child element as the default rendered element, combining their props and behavior."
      }
    },
    "element": "HTMLDivElement"
  },
  "Control": {
    "props": {
      "asChild": {
        "type": "boolean",
        "isRequired": false,
        "description": "Use the provided child element as the default rendered element, combining their props and behavior."
      }
    },
    "element": "HTMLDivElement"
  },
  "Input": {
    "props": {
      "asChild": {
        "type": "boolean",
        "isRequired": false,
        "description": "Use the provided child element as the default rendered element, combining their props and behavior."
      },
      "index": {
        "type": "number",
        "isRequired": false
      }
    },
    "element": "HTMLInputElement"
  },
  "Label": {
    "props": {
      "asChild": {
        "type": "boolean",
        "isRequired": false,
        "description": "Use the provided child element as the default rendered element, combining their props and behavior."
      }
    },
    "element": "HTMLLabelElement"
  },
  "MonthSelect": {
    "props": {
      "asChild": {
        "type": "boolean",
        "isRequired": false,
        "description": "Use the provided child element as the default rendered element, combining their props and behavior."
      }
    },
    "element": "HTMLSelectElement"
  },
  "NextTrigger": {
    "props": {
      "asChild": {
        "type": "boolean",
        "isRequired": false,
        "description": "Use the provided child element as the default rendered element, combining their props and behavior."
      }
    },
    "element": "HTMLButtonElement"
  },
  "Positioner": {
    "props": {
      "asChild": {
        "type": "boolean",
        "isRequired": false,
        "description": "Use the provided child element as the default rendered element, combining their props and behavior."
      }
    },
    "element": "HTMLDivElement"
  },
  "PresetTrigger": {
    "props": {
      "value": {
        "type": "PresetTriggerValue",
        "isRequired": true
      },
      "asChild": {
        "type": "boolean",
        "isRequired": false,
        "description": "Use the provided child element as the default rendered element, combining their props and behavior."
      }
    },
    "element": "HTMLButtonElement"
  },
  "PrevTrigger": {
    "props": {
      "asChild": {
        "type": "boolean",
        "isRequired": false,
        "description": "Use the provided child element as the default rendered element, combining their props and behavior."
      }
    },
    "element": "HTMLButtonElement"
  },
  "RangeText": {
    "props": {
      "asChild": {
        "type": "boolean",
        "isRequired": false,
        "description": "Use the provided child element as the default rendered element, combining their props and behavior."
      }
    },
    "element": "HTMLDivElement"
  },
  "Root": {
    "props": {
      "asChild": {
        "type": "boolean",
        "isRequired": false,
        "description": "Use the provided child element as the default rendered element, combining their props and behavior."
      },
      "closeOnSelect": {
        "type": "boolean",
        "isRequired": false,
        "defaultValue": "true",
        "description": "Whether the calendar should close after the date selection is complete.\nThis is ignored when the selection mode is `multiple`."
      },
      "defaultOpen": {
        "type": "boolean",
        "isRequired": false,
        "description": "The initial open state of the date picker when it is first rendered.\nUse when you do not need to control its open state."
      },
      "defaultValue": {
        "type": "DateValue[]",
        "isRequired": false,
        "description": "The initial value of the date picker when it is first rendered.\nUse when you do not need to control the state of the date picker."
      },
      "disabled": {
        "type": "boolean",
        "isRequired": false,
        "description": "Whether the calendar is disabled."
      },
      "fixedWeeks": {
        "type": "boolean",
        "isRequired": false,
        "description": "Whether the calendar should have a fixed number of weeks.\nThis renders the calendar with 6 weeks instead of 5 or 6."
      },
      "focusedValue": {
        "type": "DateValue",
        "isRequired": false,
        "description": "The focused date."
      },
      "format": {
        "type": "(date: DateValue) => string",
        "isRequired": false,
        "description": "The format of the date to display in the input."
      },
      "id": {
        "type": "string",
        "isRequired": false,
        "description": "The unique identifier of the machine."
      },
      "ids": {
        "type": "Partial<{ root: string; label(index: number): string; table(id: string): string; tableHeader(id: string): string; tableBody(id: string): string; tableRow(id: string): string; content: string; ... 10 more ...; positioner: string; }>",
        "isRequired": false,
        "description": "The ids of the elements in the date picker. Useful for composition."
      },
      "immediate": {
        "type": "boolean",
        "isRequired": false,
        "description": "Whether to synchronize the present change immediately or defer it to the next frame"
      },
      "isDateUnavailable": {
        "type": "(date: DateValue, locale: string) => boolean",
        "isRequired": false,
        "description": "Returns whether a date of the calendar is available."
      },
      "lazyMount": {
        "type": "boolean",
        "isRequired": false,
        "defaultValue": "false",
        "description": "Whether to enable lazy mounting"
      },
      "locale": {
        "type": "string",
        "isRequired": false,
        "defaultValue": "\"en-US\"",
        "description": "The locale (BCP 47 language tag) to use when formatting the date."
      },
      "max": {
        "type": "DateValue",
        "isRequired": false,
        "description": "The maximum date that can be selected."
      },
      "min": {
        "type": "DateValue",
        "isRequired": false,
        "description": "The minimum date that can be selected."
      },
      "name": {
        "type": "string",
        "isRequired": false,
        "description": "The `name` attribute of the input element."
      },
      "numOfMonths": {
        "type": "number",
        "isRequired": false,
        "description": "The number of months to display."
      },
      "onExitComplete": {
        "type": "() => void",
        "isRequired": false,
        "description": "Function called when the animation ends in the closed state"
      },
      "onFocusChange": {
        "type": "(details: FocusChangeDetails) => void",
        "isRequired": false,
        "description": "Function called when the focused date changes."
      },
      "onOpenChange": {
        "type": "(details: OpenChangeDetails) => void",
        "isRequired": false,
        "description": "Function called when the calendar opens or closes."
      },
      "onValueChange": {
        "type": "(details: ValueChangeDetails) => void",
        "isRequired": false,
        "description": "Function called when the value changes."
      },
      "onViewChange": {
        "type": "(details: ViewChangeDetails) => void",
        "isRequired": false,
        "description": "Function called when the view changes."
      },
      "open": {
        "type": "boolean",
        "isRequired": false,
        "description": "Whether the datepicker is open"
      },
      "positioning": {
        "type": "PositioningOptions",
        "isRequired": false,
        "description": "The user provided options used to position the date picker content"
      },
      "present": {
        "type": "boolean",
        "isRequired": false,
        "description": "Whether the node is present (controlled by the user)"
      },
      "readOnly": {
        "type": "boolean",
        "isRequired": false,
        "description": "Whether the calendar is read-only."
      },
      "selectionMode": {
        "type": "SelectionMode",
        "isRequired": false,
        "defaultValue": "\"single\"",
        "description": "The selection mode of the calendar.\n- `single` - only one date can be selected\n- `multiple` - multiple dates can be selected\n- `range` - a range of dates can be selected"
      },
      "startOfWeek": {
        "type": "number",
        "isRequired": false,
        "description": "The first day of the week.\n `0` - Sunday\n `1` - Monday\n `2` - Tuesday\n `3` - Wednesday\n `4` - Thursday\n `5` - Friday\n `6` - Saturday"
      },
      "timeZone": {
        "type": "string",
        "isRequired": false,
        "defaultValue": "\"UTC\"",
        "description": "The time zone to use"
      },
      "translations": {
        "type": "IntlTranslations",
        "isRequired": false,
        "description": "The localized messages to use."
      },
      "unmountOnExit": {
        "type": "boolean",
        "isRequired": false,
        "defaultValue": "false",
        "description": "Whether to unmount on exit."
      },
      "value": {
        "type": "DateValue[]",
        "isRequired": false,
        "description": "The selected date(s)."
      },
      "view": {
        "type": "DateView",
        "isRequired": false,
        "defaultValue": "\"day\"",
        "description": "The view of the calendar"
      }
    },
    "element": "HTMLDivElement"
  },
  "RootProvider": {
    "props": {
      "value": {
        "type": "UseDatePickerReturn",
        "isRequired": true
      },
      "asChild": {
        "type": "boolean",
        "isRequired": false,
        "description": "Use the provided child element as the default rendered element, combining their props and behavior."
      },
      "immediate": {
        "type": "boolean",
        "isRequired": false,
        "description": "Whether to synchronize the present change immediately or defer it to the next frame"
      },
      "lazyMount": {
        "type": "boolean",
        "isRequired": false,
        "defaultValue": "false",
        "description": "Whether to enable lazy mounting"
      },
      "onExitComplete": {
        "type": "() => void",
        "isRequired": false,
        "description": "Function called when the animation ends in the closed state"
      },
      "present": {
        "type": "boolean",
        "isRequired": false,
        "description": "Whether the node is present (controlled by the user)"
      },
      "unmountOnExit": {
        "type": "boolean",
        "isRequired": false,
        "defaultValue": "false",
        "description": "Whether to unmount on exit."
      }
    },
    "element": "HTMLDivElement"
  },
  "TableBody": {
    "props": {
      "asChild": {
        "type": "boolean",
        "isRequired": false,
        "description": "Use the provided child element as the default rendered element, combining their props and behavior."
      }
    },
    "element": "HTMLTableSectionElement"
  },
  "TableCell": {
    "props": {
      "value": {
        "type": "number | DateValue",
        "isRequired": true
      },
      "asChild": {
        "type": "boolean",
        "isRequired": false,
        "description": "Use the provided child element as the default rendered element, combining their props and behavior."
      },
      "columns": {
        "type": "number",
        "isRequired": false
      },
      "disabled": {
        "type": "boolean",
        "isRequired": false
      },
      "visibleRange": {
        "type": "VisibleRange",
        "isRequired": false
      }
    },
    "element": "HTMLTableCellElement"
  },
  "TableCellTrigger": {
    "props": {
      "asChild": {
        "type": "boolean",
        "isRequired": false,
        "description": "Use the provided child element as the default rendered element, combining their props and behavior."
      }
    },
    "element": "HTMLDivElement"
  },
  "TableHead": {
    "props": {
      "asChild": {
        "type": "boolean",
        "isRequired": false,
        "description": "Use the provided child element as the default rendered element, combining their props and behavior."
      }
    },
    "element": "HTMLTableSectionElement"
  },
  "TableHeader": {
    "props": {
      "asChild": {
        "type": "boolean",
        "isRequired": false,
        "description": "Use the provided child element as the default rendered element, combining their props and behavior."
      }
    },
    "element": "HTMLTableCellElement"
  },
  "Table": {
    "props": {
      "asChild": {
        "type": "boolean",
        "isRequired": false,
        "description": "Use the provided child element as the default rendered element, combining their props and behavior."
      },
      "columns": {
        "type": "number",
        "isRequired": false
      }
    },
    "element": "HTMLTableElement"
  },
  "TableRow": {
    "props": {
      "asChild": {
        "type": "boolean",
        "isRequired": false,
        "description": "Use the provided child element as the default rendered element, combining their props and behavior."
      }
    },
    "element": "HTMLTableRowElement"
  },
  "Trigger": {
    "props": {
      "asChild": {
        "type": "boolean",
        "isRequired": false,
        "description": "Use the provided child element as the default rendered element, combining their props and behavior."
      }
    },
    "element": "HTMLButtonElement"
  },
  "ViewControl": {
    "props": {
      "asChild": {
        "type": "boolean",
        "isRequired": false,
        "description": "Use the provided child element as the default rendered element, combining their props and behavior."
      }
    },
    "element": "HTMLDivElement"
  },
  "View": {
    "props": {
      "view": {
        "type": "DateView",
        "isRequired": true
      },
      "asChild": {
        "type": "boolean",
        "isRequired": false,
        "description": "Use the provided child element as the default rendered element, combining their props and behavior."
      }
    },
    "element": "HTMLDivElement"
  },
  "ViewTrigger": {
    "props": {
      "asChild": {
        "type": "boolean",
        "isRequired": false,
        "description": "Use the provided child element as the default rendered element, combining their props and behavior."
      }
    },
    "element": "HTMLButtonElement"
  },
  "YearSelect": {
    "props": {
      "asChild": {
        "type": "boolean",
        "isRequired": false,
        "description": "Use the provided child element as the default rendered element, combining their props and behavior."
      }
    },
    "element": "HTMLSelectElement"
  }
}