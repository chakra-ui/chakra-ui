{
  "ContentGroup": {
    "props": {
      "as": {
        "type": "React.ElementType",
        "isRequired": false,
        "description": "The underlying element to render."
      },
      "asChild": {
        "type": "boolean",
        "isRequired": false,
        "description": "Use the provided child element as the default rendered element, combining their props and behavior."
      }
    }
  },
  "Content": {
    "props": {
      "as": {
        "type": "React.ElementType",
        "isRequired": false,
        "description": "The underlying element to render."
      },
      "asChild": {
        "type": "boolean",
        "isRequired": false,
        "description": "Use the provided child element as the default rendered element, combining their props and behavior."
      }
    }
  },
  "Indicator": {
    "props": {
      "as": {
        "type": "React.ElementType",
        "isRequired": false,
        "description": "The underlying element to render."
      },
      "asChild": {
        "type": "boolean",
        "isRequired": false,
        "description": "Use the provided child element as the default rendered element, combining their props and behavior."
      }
    }
  },
  "List": {
    "props": {
      "as": {
        "type": "React.ElementType",
        "isRequired": false,
        "description": "The underlying element to render."
      },
      "asChild": {
        "type": "boolean",
        "isRequired": false,
        "description": "Use the provided child element as the default rendered element, combining their props and behavior."
      }
    }
  },
  "Root": {
    "props": {
      "as": {
        "type": "React.ElementType",
        "isRequired": false,
        "description": "The underlying element to render."
      },
      "asChild": {
        "type": "boolean",
        "isRequired": false,
        "description": "Use the provided child element as the default rendered element, combining their props and behavior."
      },
      "unstyled": {
        "type": "boolean",
        "isRequired": false,
        "description": "Whether to remove the component's style."
      },
      "activationMode": {
        "type": "'manual' | 'automatic'",
        "isRequired": false,
        "defaultValue": "\"automatic\"",
        "description": "The activation mode of the tabs. Can be `manual` or `automatic`\n- `manual`: Tabs are activated when clicked or press `enter` key.\n- `automatic`: Tabs are activated when receiving focus"
      },
      "composite": {
        "type": "boolean",
        "isRequired": false,
        "description": "Whether the tab is composite"
      },
      "defaultValue": {
        "type": "string",
        "isRequired": false,
        "description": "The initial selected tab value when rendered.\nUse when you don't need to control the selected tab value."
      },
      "deselectable": {
        "type": "boolean",
        "isRequired": false,
        "description": "Whether the active tab can be deselected when clicking on it."
      },
      "id": {
        "type": "string",
        "isRequired": false,
        "description": "The unique identifier of the machine."
      },
      "ids": {
        "type": "Partial<{ root: string; trigger: string; list: string; content: string; indicator: string }>",
        "isRequired": false,
        "description": "The ids of the elements in the tabs. Useful for composition."
      },
      "lazyMount": {
        "type": "boolean",
        "isRequired": false,
        "defaultValue": "false",
        "description": "Whether to enable lazy mounting"
      },
      "loopFocus": {
        "type": "boolean",
        "isRequired": false,
        "defaultValue": "true",
        "description": "Whether the keyboard navigation will loop from last tab to first, and vice versa."
      },
      "navigate": {
        "type": "(details: NavigateDetails) => void",
        "isRequired": false,
        "description": "Function to navigate to the selected tab when clicking on it.\nUseful if tab triggers are anchor elements."
      },
      "onFocusChange": {
        "type": "(details: FocusChangeDetails) => void",
        "isRequired": false,
        "description": "Callback to be called when the focused tab changes"
      },
      "onValueChange": {
        "type": "(details: ValueChangeDetails) => void",
        "isRequired": false,
        "description": "Callback to be called when the selected/active tab changes"
      },
      "orientation": {
        "type": "'horizontal' | 'vertical'",
        "isRequired": false,
        "defaultValue": "\"horizontal\"",
        "description": "The orientation of the tabs. Can be `horizontal` or `vertical`\n- `horizontal`: only left and right arrow key navigation will work.\n- `vertical`: only up and down arrow key navigation will work."
      },
      "translations": {
        "type": "IntlTranslations",
        "isRequired": false,
        "description": "Specifies the localized strings that identifies the accessibility elements and their states"
      },
      "unmountOnExit": {
        "type": "boolean",
        "isRequired": false,
        "defaultValue": "false",
        "description": "Whether to unmount on exit."
      },
      "value": {
        "type": "string",
        "isRequired": false,
        "description": "The controlled selected tab value"
      },
      "colorPalette": {
        "defaultValue": "gray",
        "type": "\"gray\" | \"red\" | \"orange\" | \"yellow\" | \"green\" | \"teal\" | \"blue\" | \"cyan\" | \"purple\" | \"pink\"",
        "isRequired": false,
        "description": "The color palette of the component"
      },
      "fitted": {
        "type": "\"true\" | \"false\"",
        "isRequired": false,
        "description": "The fitted of the component"
      },
      "justify": {
        "type": "\"start\" | \"center\" | \"end\"",
        "isRequired": false,
        "description": "The justify of the component"
      },
      "size": {
        "type": "\"sm\" | \"md\" | \"lg\"",
        "defaultValue": "md",
        "isRequired": false,
        "description": "The size of the component"
      },
      "variant": {
        "type": "\"line\" | \"subtle\" | \"enclosed\" | \"outline\" | \"plain\"",
        "defaultValue": "line",
        "isRequired": false,
        "description": "The variant of the component"
      }
    },
    "element": "HTMLDivElement"
  },
  "RootProvider": {
    "props": {
      "as": {
        "type": "React.ElementType",
        "isRequired": false,
        "description": "The underlying element to render."
      },
      "asChild": {
        "type": "boolean",
        "isRequired": false,
        "description": "Use the provided child element as the default rendered element, combining their props and behavior."
      },
      "value": {
        "type": "UseTabsReturn",
        "isRequired": true
      },
      "lazyMount": {
        "type": "boolean",
        "isRequired": false,
        "defaultValue": "false",
        "description": "Whether to enable lazy mounting"
      },
      "unmountOnExit": {
        "type": "boolean",
        "isRequired": false,
        "defaultValue": "false",
        "description": "Whether to unmount on exit."
      }
    },
    "element": "HTMLDivElement"
  },
  "Trigger": {
    "props": {
      "as": {
        "type": "React.ElementType",
        "isRequired": false,
        "description": "The underlying element to render."
      },
      "asChild": {
        "type": "boolean",
        "isRequired": false,
        "description": "Use the provided child element as the default rendered element, combining their props and behavior."
      }
    }
  },
  "TabContent": {
    "props": {
      "value": {
        "type": "string",
        "isRequired": true,
        "description": "The value of the tab"
      },
      "asChild": {
        "type": "boolean",
        "isRequired": false,
        "description": "Use the provided child element as the default rendered element, combining their props and behavior."
      }
    },
    "element": "HTMLDivElement"
  },
  "TabIndicator": {
    "props": {
      "asChild": {
        "type": "boolean",
        "isRequired": false,
        "description": "Use the provided child element as the default rendered element, combining their props and behavior."
      }
    },
    "element": "HTMLDivElement"
  },
  "TabList": {
    "props": {
      "asChild": {
        "type": "boolean",
        "isRequired": false,
        "description": "Use the provided child element as the default rendered element, combining their props and behavior."
      }
    },
    "element": "HTMLDivElement"
  },
  "TabTrigger": {
    "props": {
      "value": {
        "type": "string",
        "isRequired": true,
        "description": "The value of the tab"
      },
      "asChild": {
        "type": "boolean",
        "isRequired": false,
        "description": "Use the provided child element as the default rendered element, combining their props and behavior."
      },
      "disabled": {
        "type": "boolean",
        "isRequired": false,
        "description": "Whether the tab is disabled"
      }
    },
    "element": "HTMLButtonElement"
  }
}