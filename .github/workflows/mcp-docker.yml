name: MCP Docker Build & Publish

on:
  push:
    tags:
      - '@chakra-ui/react-mcp@*'
  workflow_dispatch:  # For testing
    inputs:
      version:
        description: 'Docker image tag (X.X.X, test, etc.) - independent of @chakra-ui/react-mcp version'
        default: 'development'
        required: true
      push_to_registry:
        description: 'Push to GHCR (false = dry-run)'
        type: boolean
        default: false

env:
  REGISTRY: ghcr.io  # GitHub container registry
  IMAGE_NAME: react-mcp  # Matching @chakra-ui/react-mcp on npmjs.com
  SHOULD_PUSH: ${{ github.event_name == 'push' || inputs.push_to_registry }}

concurrency: ${{ github.workflow }}-${{ github.ref }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Extract MCP version
        id: version
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            echo "version=${{ inputs.version }}" >> $GITHUB_OUTPUT
          else
            echo "version=${GITHUB_REF#refs/tags/@chakra-ui/react-mcp@}" >> $GITHUB_OUTPUT
          fi

      - name: Log in to GHCR
        if: env.SHOULD_PUSH == 'true'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=${{ steps.version.outputs.version }}
            type=raw,value=latest

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@v6
        with:
          context: .
          file: apps/mcp/Dockerfile
          push: ${{ env.SHOULD_PUSH }}
          platforms: linux/amd64,linux/arm64
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            GITHUB_REPOSITORY=${{ github.repository }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Generate attestation
        if: env.SHOULD_PUSH == 'true'
        uses: actions/attest-build-provenance@v2
        with:
          subject-name: ${{ env.REGISTRY }}/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}
          subject-digest: ${{ steps.push.outputs.digest }}
          push-to-registry: ${{ env.SHOULD_PUSH }}
