{
  "AvatarBadge": {
    "placement": { "type": "BadgePlacement", "required": false }
  },
  "AvatarFallback": {},
  "AvatarGroup": {
    "max": {
      "type": "number",
      "required": false,
      "description": "The maximum number of visible avatars"
    },
    "spacing": {
      "type": "ResponsiveValue<string | number | (string & {})>",
      "defaultValue": "-0.75rem",
      "required": false,
      "description": "The space between the avatars in the group."
    }
  },
  "AvatarImage": {
    "align": {
      "type": "ResponsiveValue<ObjectPosition<Length>>",
      "required": false,
      "description": "How to align the image within its bounds.\nIt maps to css `object-position` property."
    },
    "crossOrigin": {
      "type": "\"\" | \"anonymous\" | \"use-credentials\"",
      "required": false,
      "description": "The key used to set the crossOrigin on the HTMLImageElement into which the image will be loaded.\nThis tells the browser to request cross-origin access when trying to download the image data."
    },
    "fallback": {
      "type": "ReactElement<any, string | JSXElementConstructor<any>>",
      "required": false,
      "description": "Fallback element to show if image is loading or image fails."
    },
    "fallbackSrc": {
      "type": "string",
      "required": false,
      "description": "Fallback image `src` to show if image is loading or image fails.\n\nNote ðŸš¨: We recommend you use a local image"
    },
    "fallbackStrategy": {
      "type": "FallbackStrategy",
      "defaultValue": "beforeLoadOrError",
      "required": false,
      "description": "- beforeLoadOrError(default): loads the fallbackImage while loading the src\n- onError: loads the fallbackImage only if there is an error fetching the src"
    },
    "fit": {
      "type": "ResponsiveValue<ObjectFit>",
      "required": false,
      "description": "How the image to fit within its bounds.\nIt maps to css `object-fit` property."
    },
    "htmlHeight": {
      "type": "string | number",
      "required": false,
      "description": "The native HTML `height` attribute to the passed to the `img`"
    },
    "htmlWidth": {
      "type": "string | number",
      "required": false,
      "description": "The native HTML `width` attribute to the passed to the `img`"
    },
    "ignoreFallback": {
      "type": "boolean",
      "defaultValue": false,
      "required": false,
      "description": "If `true`, opt out of the `fallbackSrc` logic and use as `img`"
    },
    "loading": { "type": "\"eager\" | \"lazy\"", "required": false },
    "onError": {
      "type": "ReactEventHandler<HTMLImageElement>",
      "required": false,
      "description": "A callback for when there was an error loading the image `src`"
    },
    "onLoad": {
      "type": "ReactEventHandler<HTMLImageElement>",
      "required": false,
      "description": "A callback for when the image `src` has been loaded"
    },
    "sizes": {
      "type": "string",
      "required": false,
      "description": "The image `sizes` attribute"
    },
    "src": {
      "type": "string",
      "required": false,
      "description": "The image `src` attribute"
    },
    "srcSet": {
      "type": "string",
      "required": false,
      "description": "The image `srcset` attribute"
    }
  },
  "AvatarRoot": {
    "crossOrigin": {
      "type": "\"\" | \"anonymous\" | \"use-credentials\"",
      "required": false
    },
    "getInitials": {
      "type": "(name: string) => string",
      "required": false,
      "description": "Function to get the initials to display"
    },
    "icon": {
      "type": "ReactElement<any, string | JSXElementConstructor<any>>",
      "required": false,
      "description": "The default avatar used as fallback when `name`, and `src`\nis not specified."
    },
    "iconLabel": { "type": "string", "required": false },
    "ignoreFallback": {
      "type": "boolean",
      "defaultValue": false,
      "required": false,
      "description": "If `true`, opt out of the avatar's `fallback` logic and\nrenders the `img` at all times."
    },
    "loading": {
      "type": "\"eager\" | \"lazy\"",
      "required": false,
      "description": "Defines loading strategy"
    },
    "name": {
      "type": "string",
      "required": false,
      "description": "The name of the person in the avatar.\n\n- if `src` has loaded, the name will be used as the `alt` attribute of the `img`\n- If `src` is not loaded, the name will be used to create the initials"
    },
    "onError": {
      "type": "VoidFunction",
      "required": false,
      "description": "Function called when image failed to load"
    },
    "referrerPolicy": {
      "type": "HTMLAttributeReferrerPolicy",
      "required": false,
      "description": "Defining which referrer is sent when fetching the resource."
    },
    "showBorder": {
      "type": "boolean",
      "defaultValue": false,
      "required": false,
      "description": "If `true`, the `Avatar` will show a border around it.\n\nBest for a group of avatars"
    },
    "src": {
      "type": "string",
      "required": false,
      "description": "The image url of the `Avatar`"
    },
    "srcSet": {
      "type": "string",
      "required": false,
      "description": "List of sources to use for different screen resolutions"
    }
  }
}
