{
  "Popover": {
    "arrowPadding": {
      "type": "number",
      "defaultValue": "8",
      "required": false,
      "description": "The padding required to prevent the arrow from\nreaching the very edge of the popper."
    },
    "arrowShadowColor": {
      "type": "string",
      "required": false,
      "description": "The `box-shadow` of the popover arrow"
    },
    "arrowSize": {
      "type": "number",
      "required": false,
      "description": "The size of the popover arrow"
    },
    "autoFocus": {
      "type": "boolean",
      "defaultValue": true,
      "required": false,
      "description": "If `true`, focus will be transferred to the first interactive element\nwhen the popover opens"
    },
    "boundary": {
      "type": "\"clippingParents\" | \"scrollParent\" | HTMLElement",
      "defaultValue": "clippingParents",
      "required": false,
      "description": "The boundary area for the popper. Used within the `preventOverflow` modifier"
    },
    "closeDelay": {
      "type": "number",
      "defaultValue": "200",
      "required": false
    },
    "closeOnBlur": {
      "type": "boolean",
      "defaultValue": true,
      "required": false,
      "description": "If `true`, the popover will close when you blur out it by\nclicking outside or tabbing out"
    },
    "closeOnEsc": {
      "type": "boolean",
      "defaultValue": true,
      "required": false,
      "description": "If `true`, the popover will close when you hit the `Esc` key"
    },
    "computePositionOnMount": {
      "type": "boolean",
      "required": false,
      "description": "If `true`, the popover will be positioned when it mounts\n(even if it's not open)\n\nNote ðŸš¨: We don't recommend using this in a popover/menu intensive UI or page\nas it might affect scrolling performance."
    },
    "defaultIsOpen": {
      "type": "boolean",
      "required": false,
      "description": "If `true`, the popover will be initially opened."
    },
    "direction": {
      "type": "\"ltr\" | \"rtl\"",
      "defaultValue": "ltr",
      "required": false,
      "description": "Theme direction `ltr` or `rtl`. Popper's placement will\nbe set accordingly"
    },
    "eventListeners": {
      "type": "type ONLY_FOR_FORMAT =\n  | boolean\n  | { scroll?: boolean | undefined; resize?: boolean | undefined }",
      "defaultValue": true,
      "required": false,
      "description": "If provided, determines whether the popper will reposition itself on `scroll`\nand `resize` of the window."
    },
    "flip": {
      "type": "boolean",
      "defaultValue": true,
      "required": false,
      "description": "If `true`, the popper will change its placement and flip when it's\nabout to overflow its boundary area."
    },
    "gutter": {
      "type": "number",
      "defaultValue": "8",
      "required": false,
      "description": "The distance or margin between the reference and popper.\nIt is used internally to create an `offset` modifier.\n\nNB: If you define `offset` prop, it'll override the gutter."
    },
    "id": {
      "type": "string",
      "required": false,
      "description": "The html `id` attribute of the popover.\nIf not provided, we generate a unique id.\n\nThis `id` is also used to auto-generate the `aria-labelledby`\nand `aria-describedby` attributes that points to the `PopoverHeader` and `PopoverBody`"
    },
    "initialFocusRef": {
      "type": "RefObject<{ focus(): void }>",
      "required": false,
      "description": "The `ref` of the element that should receive focus when the popover opens."
    },
    "isLazy": {
      "type": "boolean",
      "required": false,
      "description": "Performance ðŸš€:\nIf `true`, the PopoverContent rendering will be deferred\nuntil the popover is open."
    },
    "isOpen": {
      "type": "boolean",
      "required": false,
      "description": "If `true`, the popover will be opened in controlled mode."
    },
    "lazyBehavior": {
      "type": "LazyMode",
      "defaultValue": "unmount",
      "required": false,
      "description": "Performance ðŸš€:\nThe lazy behavior of popover's content when not visible.\nOnly works when `isLazy={true}`\n\n- \"unmount\": The popover's content is always unmounted when not open.\n- \"keepMounted\": The popover's content initially unmounted,\nbut stays mounted when popover is open."
    },
    "matchWidth": {
      "type": "boolean",
      "defaultValue": false,
      "required": false,
      "description": "If `true`, the popper will match the width of the reference at all times.\nIt's useful for `autocomplete`, `date-picker` and `select` patterns."
    },
    "modifiers": {
      "type": "Partial<Modifier<string, any>>[]",
      "required": false,
      "description": "Array of popper.js modifiers. Check the docs to see\nthe list of possible modifiers you can pass."
    },
    "offset": {
      "type": "[number, number]",
      "required": false,
      "description": "The main and cross-axis offset to displace popper element\nfrom its reference element."
    },
    "onClose": {
      "type": "() => void",
      "required": false,
      "description": "Callback fired when the popover closes"
    },
    "onOpen": {
      "type": "() => void",
      "required": false,
      "description": "Callback fired when the popover opens"
    },
    "openDelay": { "type": "number", "defaultValue": "200", "required": false },
    "placement": {
      "type": "PlacementWithLogical",
      "defaultValue": "bottom",
      "required": false,
      "description": "The placement of the popper relative to its reference."
    },
    "preventOverflow": {
      "type": "boolean",
      "defaultValue": true,
      "required": false,
      "description": "If `true`, will prevent the popper from being cut off and ensure\nit's visible within the boundary area."
    },
    "returnFocusOnClose": {
      "type": "boolean",
      "defaultValue": true,
      "required": false,
      "description": "If `true`, focus will be returned to the element that triggers the popover\nwhen it closes"
    },
    "strategy": {
      "type": "\"absolute\" | \"fixed\"",
      "defaultValue": "absolute",
      "required": false,
      "description": "The CSS positioning strategy to use."
    },
    "trigger": {
      "type": "\"click\" | \"hover\"",
      "defaultValue": "click",
      "required": false,
      "description": "The interaction that triggers the popover.\n\n`hover` - means the popover will open when you hover with mouse or\nfocus with keyboard on the popover trigger\n\n`click` - means the popover will open on click or\npress `Enter` to `Space` on keyboard"
    }
  },
  "PopoverArrow": {},
  "PopoverBody": {},
  "PopoverContent": {
    "about": { "type": "string", "required": false },
    "accessKey": { "type": "string", "required": false },
    "aria-activedescendant": { "type": "string", "required": false },
    "aria-atomic": { "type": "Booleanish", "required": false },
    "aria-autocomplete": {
      "type": "\"list\" | \"none\" | \"inline\" | \"both\"",
      "required": false
    },
    "aria-busy": { "type": "Booleanish", "required": false },
    "aria-checked": {
      "type": "boolean | \"true\" | \"false\" | \"mixed\"",
      "required": false
    },
    "aria-colcount": { "type": "number", "required": false },
    "aria-colindex": { "type": "number", "required": false },
    "aria-colspan": { "type": "number", "required": false },
    "aria-controls": { "type": "string", "required": false },
    "aria-current": {
      "type": "type ONLY_FOR_FORMAT =\n  | boolean\n  | \"time\"\n  | \"true\"\n  | \"false\"\n  | \"step\"\n  | \"page\"\n  | \"location\"\n  | \"date\"",
      "required": false
    },
    "aria-describedby": { "type": "string", "required": false },
    "aria-details": { "type": "string", "required": false },
    "aria-disabled": { "type": "Booleanish", "required": false },
    "aria-dropeffect": {
      "type": "\"link\" | \"none\" | \"copy\" | \"execute\" | \"move\" | \"popup\"",
      "required": false
    },
    "aria-errormessage": { "type": "string", "required": false },
    "aria-expanded": { "type": "Booleanish", "required": false },
    "aria-flowto": { "type": "string", "required": false },
    "aria-grabbed": { "type": "Booleanish", "required": false },
    "aria-haspopup": {
      "type": "type ONLY_FOR_FORMAT =\n  | boolean\n  | \"dialog\"\n  | \"menu\"\n  | \"grid\"\n  | \"true\"\n  | \"false\"\n  | \"listbox\"\n  | \"tree\"",
      "required": false
    },
    "aria-hidden": { "type": "Booleanish", "required": false },
    "aria-invalid": {
      "type": "boolean | \"true\" | \"false\" | \"grammar\" | \"spelling\"",
      "required": false
    },
    "aria-keyshortcuts": { "type": "string", "required": false },
    "aria-label": { "type": "string", "required": false },
    "aria-labelledby": { "type": "string", "required": false },
    "aria-level": { "type": "number", "required": false },
    "aria-live": {
      "type": "\"off\" | \"assertive\" | \"polite\"",
      "required": false
    },
    "aria-modal": { "type": "Booleanish", "required": false },
    "aria-multiline": { "type": "Booleanish", "required": false },
    "aria-multiselectable": { "type": "Booleanish", "required": false },
    "aria-orientation": {
      "type": "\"horizontal\" | \"vertical\"",
      "required": false
    },
    "aria-owns": { "type": "string", "required": false },
    "aria-placeholder": { "type": "string", "required": false },
    "aria-posinset": { "type": "number", "required": false },
    "aria-pressed": {
      "type": "boolean | \"true\" | \"false\" | \"mixed\"",
      "required": false
    },
    "aria-readonly": { "type": "Booleanish", "required": false },
    "aria-relevant": {
      "type": "type ONLY_FOR_FORMAT =\n  | \"text\"\n  | \"all\"\n  | \"additions\"\n  | \"additions removals\"\n  | \"additions text\"\n  | \"removals\"\n  | \"removals additions\"\n  | \"removals text\"\n  | \"text additions\"\n  | \"text removals\"",
      "required": false
    },
    "aria-required": { "type": "Booleanish", "required": false },
    "aria-roledescription": { "type": "string", "required": false },
    "aria-rowcount": { "type": "number", "required": false },
    "aria-rowindex": { "type": "number", "required": false },
    "aria-rowspan": { "type": "number", "required": false },
    "aria-selected": { "type": "Booleanish", "required": false },
    "aria-setsize": { "type": "number", "required": false },
    "aria-sort": {
      "type": "\"none\" | \"ascending\" | \"descending\" | \"other\"",
      "required": false
    },
    "aria-valuemax": { "type": "number", "required": false },
    "aria-valuemin": { "type": "number", "required": false },
    "aria-valuenow": { "type": "number", "required": false },
    "aria-valuetext": { "type": "string", "required": false },
    "autoCapitalize": { "type": "string", "required": false },
    "autoCorrect": { "type": "string", "required": false },
    "autoSave": { "type": "string", "required": false },
    "className": { "type": "string", "required": false },
    "color": { "type": "string", "required": false },
    "contentEditable": {
      "type": "\"inherit\" | Booleanish",
      "required": false
    },
    "contextMenu": { "type": "string", "required": false },
    "dangerouslySetInnerHTML": {
      "type": "{ __html: string }",
      "required": false
    },
    "datatype": { "type": "string", "required": false },
    "defaultChecked": { "type": "boolean", "required": false },
    "defaultValue": {
      "type": "string | number | readonly string[]",
      "required": false
    },
    "dir": { "type": "string", "required": false },
    "draggable": { "type": "Booleanish", "required": false },
    "hidden": { "type": "boolean", "required": false },
    "id": { "type": "string", "required": false },
    "inlist": { "type": "any", "required": false },
    "inputMode": {
      "type": "type ONLY_FOR_FORMAT =\n  | \"text\"\n  | \"search\"\n  | \"none\"\n  | \"tel\"\n  | \"url\"\n  | \"email\"\n  | \"numeric\"\n  | \"decimal\"",
      "required": false
    },
    "is": { "type": "string", "required": false },
    "itemID": { "type": "string", "required": false },
    "itemProp": { "type": "string", "required": false },
    "itemRef": { "type": "string", "required": false },
    "itemScope": { "type": "boolean", "required": false },
    "itemType": { "type": "string", "required": false },
    "lang": { "type": "string", "required": false },
    "motionProps": {
      "type": "HTMLMotionProps<\"section\">",
      "required": false
    },
    "nonce": { "type": "string", "required": false },
    "onAbort": { "type": "ReactEventHandler<HTMLElement>", "required": false },
    "onAbortCapture": {
      "type": "ReactEventHandler<HTMLElement>",
      "required": false
    },
    "onAnimationEnd": {
      "type": "AnimationEventHandler<HTMLElement>",
      "required": false
    },
    "onAnimationEndCapture": {
      "type": "AnimationEventHandler<HTMLElement>",
      "required": false
    },
    "onAnimationIteration": {
      "type": "AnimationEventHandler<HTMLElement>",
      "required": false
    },
    "onAnimationIterationCapture": {
      "type": "AnimationEventHandler<HTMLElement>",
      "required": false
    },
    "onAnimationStartCapture": {
      "type": "AnimationEventHandler<HTMLElement>",
      "required": false
    },
    "onAuxClick": {
      "type": "MouseEventHandler<HTMLElement>",
      "required": false
    },
    "onAuxClickCapture": {
      "type": "MouseEventHandler<HTMLElement>",
      "required": false
    },
    "onBeforeInput": {
      "type": "FormEventHandler<HTMLElement>",
      "required": false
    },
    "onBeforeInputCapture": {
      "type": "FormEventHandler<HTMLElement>",
      "required": false
    },
    "onBlur": { "type": "FocusEventHandler<HTMLElement>", "required": false },
    "onBlurCapture": {
      "type": "FocusEventHandler<HTMLElement>",
      "required": false
    },
    "onCanPlay": {
      "type": "ReactEventHandler<HTMLElement>",
      "required": false
    },
    "onCanPlayCapture": {
      "type": "ReactEventHandler<HTMLElement>",
      "required": false
    },
    "onCanPlayThrough": {
      "type": "ReactEventHandler<HTMLElement>",
      "required": false
    },
    "onCanPlayThroughCapture": {
      "type": "ReactEventHandler<HTMLElement>",
      "required": false
    },
    "onChange": { "type": "FormEventHandler<HTMLElement>", "required": false },
    "onChangeCapture": {
      "type": "FormEventHandler<HTMLElement>",
      "required": false
    },
    "onClick": { "type": "MouseEventHandler<HTMLElement>", "required": false },
    "onClickCapture": {
      "type": "MouseEventHandler<HTMLElement>",
      "required": false
    },
    "onCompositionEnd": {
      "type": "CompositionEventHandler<HTMLElement>",
      "required": false
    },
    "onCompositionEndCapture": {
      "type": "CompositionEventHandler<HTMLElement>",
      "required": false
    },
    "onCompositionStart": {
      "type": "CompositionEventHandler<HTMLElement>",
      "required": false
    },
    "onCompositionStartCapture": {
      "type": "CompositionEventHandler<HTMLElement>",
      "required": false
    },
    "onCompositionUpdate": {
      "type": "CompositionEventHandler<HTMLElement>",
      "required": false
    },
    "onCompositionUpdateCapture": {
      "type": "CompositionEventHandler<HTMLElement>",
      "required": false
    },
    "onContextMenu": {
      "type": "MouseEventHandler<HTMLElement>",
      "required": false
    },
    "onContextMenuCapture": {
      "type": "MouseEventHandler<HTMLElement>",
      "required": false
    },
    "onCopy": {
      "type": "ClipboardEventHandler<HTMLElement>",
      "required": false
    },
    "onCopyCapture": {
      "type": "ClipboardEventHandler<HTMLElement>",
      "required": false
    },
    "onCut": {
      "type": "ClipboardEventHandler<HTMLElement>",
      "required": false
    },
    "onCutCapture": {
      "type": "ClipboardEventHandler<HTMLElement>",
      "required": false
    },
    "onDoubleClick": {
      "type": "MouseEventHandler<HTMLElement>",
      "required": false
    },
    "onDoubleClickCapture": {
      "type": "MouseEventHandler<HTMLElement>",
      "required": false
    },
    "onDragCapture": {
      "type": "DragEventHandler<HTMLElement>",
      "required": false
    },
    "onDragEndCapture": {
      "type": "DragEventHandler<HTMLElement>",
      "required": false
    },
    "onDragEnter": {
      "type": "DragEventHandler<HTMLElement>",
      "required": false
    },
    "onDragEnterCapture": {
      "type": "DragEventHandler<HTMLElement>",
      "required": false
    },
    "onDragExit": {
      "type": "DragEventHandler<HTMLElement>",
      "required": false
    },
    "onDragExitCapture": {
      "type": "DragEventHandler<HTMLElement>",
      "required": false
    },
    "onDragLeave": {
      "type": "DragEventHandler<HTMLElement>",
      "required": false
    },
    "onDragLeaveCapture": {
      "type": "DragEventHandler<HTMLElement>",
      "required": false
    },
    "onDragOver": {
      "type": "DragEventHandler<HTMLElement>",
      "required": false
    },
    "onDragOverCapture": {
      "type": "DragEventHandler<HTMLElement>",
      "required": false
    },
    "onDragStartCapture": {
      "type": "DragEventHandler<HTMLElement>",
      "required": false
    },
    "onDrop": { "type": "DragEventHandler<HTMLElement>", "required": false },
    "onDropCapture": {
      "type": "DragEventHandler<HTMLElement>",
      "required": false
    },
    "onDurationChange": {
      "type": "ReactEventHandler<HTMLElement>",
      "required": false
    },
    "onDurationChangeCapture": {
      "type": "ReactEventHandler<HTMLElement>",
      "required": false
    },
    "onEmptied": {
      "type": "ReactEventHandler<HTMLElement>",
      "required": false
    },
    "onEmptiedCapture": {
      "type": "ReactEventHandler<HTMLElement>",
      "required": false
    },
    "onEncrypted": {
      "type": "ReactEventHandler<HTMLElement>",
      "required": false
    },
    "onEncryptedCapture": {
      "type": "ReactEventHandler<HTMLElement>",
      "required": false
    },
    "onEnded": { "type": "ReactEventHandler<HTMLElement>", "required": false },
    "onEndedCapture": {
      "type": "ReactEventHandler<HTMLElement>",
      "required": false
    },
    "onError": { "type": "ReactEventHandler<HTMLElement>", "required": false },
    "onErrorCapture": {
      "type": "ReactEventHandler<HTMLElement>",
      "required": false
    },
    "onFocus": { "type": "FocusEventHandler<HTMLElement>", "required": false },
    "onFocusCapture": {
      "type": "FocusEventHandler<HTMLElement>",
      "required": false
    },
    "onGotPointerCapture": {
      "type": "PointerEventHandler<HTMLElement>",
      "required": false
    },
    "onGotPointerCaptureCapture": {
      "type": "PointerEventHandler<HTMLElement>",
      "required": false
    },
    "onInput": { "type": "FormEventHandler<HTMLElement>", "required": false },
    "onInputCapture": {
      "type": "FormEventHandler<HTMLElement>",
      "required": false
    },
    "onInvalid": { "type": "FormEventHandler<HTMLElement>", "required": false },
    "onInvalidCapture": {
      "type": "FormEventHandler<HTMLElement>",
      "required": false
    },
    "onKeyDown": {
      "type": "KeyboardEventHandler<HTMLElement>",
      "required": false
    },
    "onKeyDownCapture": {
      "type": "KeyboardEventHandler<HTMLElement>",
      "required": false
    },
    "onKeyPress": {
      "type": "KeyboardEventHandler<HTMLElement>",
      "required": false
    },
    "onKeyPressCapture": {
      "type": "KeyboardEventHandler<HTMLElement>",
      "required": false
    },
    "onKeyUp": {
      "type": "KeyboardEventHandler<HTMLElement>",
      "required": false
    },
    "onKeyUpCapture": {
      "type": "KeyboardEventHandler<HTMLElement>",
      "required": false
    },
    "onLoad": { "type": "ReactEventHandler<HTMLElement>", "required": false },
    "onLoadCapture": {
      "type": "ReactEventHandler<HTMLElement>",
      "required": false
    },
    "onLoadedData": {
      "type": "ReactEventHandler<HTMLElement>",
      "required": false
    },
    "onLoadedDataCapture": {
      "type": "ReactEventHandler<HTMLElement>",
      "required": false
    },
    "onLoadedMetadata": {
      "type": "ReactEventHandler<HTMLElement>",
      "required": false
    },
    "onLoadedMetadataCapture": {
      "type": "ReactEventHandler<HTMLElement>",
      "required": false
    },
    "onLoadStart": {
      "type": "ReactEventHandler<HTMLElement>",
      "required": false
    },
    "onLoadStartCapture": {
      "type": "ReactEventHandler<HTMLElement>",
      "required": false
    },
    "onLostPointerCapture": {
      "type": "PointerEventHandler<HTMLElement>",
      "required": false
    },
    "onLostPointerCaptureCapture": {
      "type": "PointerEventHandler<HTMLElement>",
      "required": false
    },
    "onMouseDown": {
      "type": "MouseEventHandler<HTMLElement>",
      "required": false
    },
    "onMouseDownCapture": {
      "type": "MouseEventHandler<HTMLElement>",
      "required": false
    },
    "onMouseEnter": {
      "type": "MouseEventHandler<HTMLElement>",
      "required": false
    },
    "onMouseLeave": {
      "type": "MouseEventHandler<HTMLElement>",
      "required": false
    },
    "onMouseMove": {
      "type": "MouseEventHandler<HTMLElement>",
      "required": false
    },
    "onMouseMoveCapture": {
      "type": "MouseEventHandler<HTMLElement>",
      "required": false
    },
    "onMouseOut": {
      "type": "MouseEventHandler<HTMLElement>",
      "required": false
    },
    "onMouseOutCapture": {
      "type": "MouseEventHandler<HTMLElement>",
      "required": false
    },
    "onMouseOver": {
      "type": "MouseEventHandler<HTMLElement>",
      "required": false
    },
    "onMouseOverCapture": {
      "type": "MouseEventHandler<HTMLElement>",
      "required": false
    },
    "onMouseUp": {
      "type": "MouseEventHandler<HTMLElement>",
      "required": false
    },
    "onMouseUpCapture": {
      "type": "MouseEventHandler<HTMLElement>",
      "required": false
    },
    "onPaste": {
      "type": "ClipboardEventHandler<HTMLElement>",
      "required": false
    },
    "onPasteCapture": {
      "type": "ClipboardEventHandler<HTMLElement>",
      "required": false
    },
    "onPause": { "type": "ReactEventHandler<HTMLElement>", "required": false },
    "onPauseCapture": {
      "type": "ReactEventHandler<HTMLElement>",
      "required": false
    },
    "onPlay": { "type": "ReactEventHandler<HTMLElement>", "required": false },
    "onPlayCapture": {
      "type": "ReactEventHandler<HTMLElement>",
      "required": false
    },
    "onPlaying": {
      "type": "ReactEventHandler<HTMLElement>",
      "required": false
    },
    "onPlayingCapture": {
      "type": "ReactEventHandler<HTMLElement>",
      "required": false
    },
    "onPointerCancel": {
      "type": "PointerEventHandler<HTMLElement>",
      "required": false
    },
    "onPointerCancelCapture": {
      "type": "PointerEventHandler<HTMLElement>",
      "required": false
    },
    "onPointerDown": {
      "type": "PointerEventHandler<HTMLElement>",
      "required": false
    },
    "onPointerDownCapture": {
      "type": "PointerEventHandler<HTMLElement>",
      "required": false
    },
    "onPointerEnter": {
      "type": "PointerEventHandler<HTMLElement>",
      "required": false
    },
    "onPointerEnterCapture": {
      "type": "PointerEventHandler<HTMLElement>",
      "required": false
    },
    "onPointerLeave": {
      "type": "PointerEventHandler<HTMLElement>",
      "required": false
    },
    "onPointerLeaveCapture": {
      "type": "PointerEventHandler<HTMLElement>",
      "required": false
    },
    "onPointerMove": {
      "type": "PointerEventHandler<HTMLElement>",
      "required": false
    },
    "onPointerMoveCapture": {
      "type": "PointerEventHandler<HTMLElement>",
      "required": false
    },
    "onPointerOut": {
      "type": "PointerEventHandler<HTMLElement>",
      "required": false
    },
    "onPointerOutCapture": {
      "type": "PointerEventHandler<HTMLElement>",
      "required": false
    },
    "onPointerOver": {
      "type": "PointerEventHandler<HTMLElement>",
      "required": false
    },
    "onPointerOverCapture": {
      "type": "PointerEventHandler<HTMLElement>",
      "required": false
    },
    "onPointerUp": {
      "type": "PointerEventHandler<HTMLElement>",
      "required": false
    },
    "onPointerUpCapture": {
      "type": "PointerEventHandler<HTMLElement>",
      "required": false
    },
    "onProgress": {
      "type": "ReactEventHandler<HTMLElement>",
      "required": false
    },
    "onProgressCapture": {
      "type": "ReactEventHandler<HTMLElement>",
      "required": false
    },
    "onRateChange": {
      "type": "ReactEventHandler<HTMLElement>",
      "required": false
    },
    "onRateChangeCapture": {
      "type": "ReactEventHandler<HTMLElement>",
      "required": false
    },
    "onReset": { "type": "FormEventHandler<HTMLElement>", "required": false },
    "onResetCapture": {
      "type": "FormEventHandler<HTMLElement>",
      "required": false
    },
    "onResize": { "type": "ReactEventHandler<HTMLElement>", "required": false },
    "onResizeCapture": {
      "type": "ReactEventHandler<HTMLElement>",
      "required": false
    },
    "onScroll": { "type": "UIEventHandler<HTMLElement>", "required": false },
    "onScrollCapture": {
      "type": "UIEventHandler<HTMLElement>",
      "required": false
    },
    "onSeeked": { "type": "ReactEventHandler<HTMLElement>", "required": false },
    "onSeekedCapture": {
      "type": "ReactEventHandler<HTMLElement>",
      "required": false
    },
    "onSeeking": {
      "type": "ReactEventHandler<HTMLElement>",
      "required": false
    },
    "onSeekingCapture": {
      "type": "ReactEventHandler<HTMLElement>",
      "required": false
    },
    "onSelect": { "type": "ReactEventHandler<HTMLElement>", "required": false },
    "onSelectCapture": {
      "type": "ReactEventHandler<HTMLElement>",
      "required": false
    },
    "onStalled": {
      "type": "ReactEventHandler<HTMLElement>",
      "required": false
    },
    "onStalledCapture": {
      "type": "ReactEventHandler<HTMLElement>",
      "required": false
    },
    "onSubmit": { "type": "FormEventHandler<HTMLElement>", "required": false },
    "onSubmitCapture": {
      "type": "FormEventHandler<HTMLElement>",
      "required": false
    },
    "onSuspend": {
      "type": "ReactEventHandler<HTMLElement>",
      "required": false
    },
    "onSuspendCapture": {
      "type": "ReactEventHandler<HTMLElement>",
      "required": false
    },
    "onTimeUpdate": {
      "type": "ReactEventHandler<HTMLElement>",
      "required": false
    },
    "onTimeUpdateCapture": {
      "type": "ReactEventHandler<HTMLElement>",
      "required": false
    },
    "onTouchCancel": {
      "type": "TouchEventHandler<HTMLElement>",
      "required": false
    },
    "onTouchCancelCapture": {
      "type": "TouchEventHandler<HTMLElement>",
      "required": false
    },
    "onTouchEnd": {
      "type": "TouchEventHandler<HTMLElement>",
      "required": false
    },
    "onTouchEndCapture": {
      "type": "TouchEventHandler<HTMLElement>",
      "required": false
    },
    "onTouchMove": {
      "type": "TouchEventHandler<HTMLElement>",
      "required": false
    },
    "onTouchMoveCapture": {
      "type": "TouchEventHandler<HTMLElement>",
      "required": false
    },
    "onTouchStart": {
      "type": "TouchEventHandler<HTMLElement>",
      "required": false
    },
    "onTouchStartCapture": {
      "type": "TouchEventHandler<HTMLElement>",
      "required": false
    },
    "onTransitionEnd": {
      "type": "TransitionEventHandler<HTMLElement>",
      "required": false
    },
    "onTransitionEndCapture": {
      "type": "TransitionEventHandler<HTMLElement>",
      "required": false
    },
    "onVolumeChange": {
      "type": "ReactEventHandler<HTMLElement>",
      "required": false
    },
    "onVolumeChangeCapture": {
      "type": "ReactEventHandler<HTMLElement>",
      "required": false
    },
    "onWaiting": {
      "type": "ReactEventHandler<HTMLElement>",
      "required": false
    },
    "onWaitingCapture": {
      "type": "ReactEventHandler<HTMLElement>",
      "required": false
    },
    "onWheel": { "type": "WheelEventHandler<HTMLElement>", "required": false },
    "onWheelCapture": {
      "type": "WheelEventHandler<HTMLElement>",
      "required": false
    },
    "placeholder": { "type": "string", "required": false },
    "prefix": { "type": "string", "required": false },
    "property": { "type": "string", "required": false },
    "radioGroup": { "type": "string", "required": false },
    "resource": { "type": "string", "required": false },
    "results": { "type": "number", "required": false },
    "role": { "type": "AriaRole", "required": false },
    "rootProps": { "type": "HTMLChakraProps<\"div\">", "required": false },
    "security": { "type": "string", "required": false },
    "slot": { "type": "string", "required": false },
    "spellCheck": { "type": "Booleanish", "required": false },
    "suppressContentEditableWarning": { "type": "boolean", "required": false },
    "suppressHydrationWarning": { "type": "boolean", "required": false },
    "tabIndex": { "type": "number", "required": false },
    "title": { "type": "string", "required": false },
    "translate": { "type": "\"yes\" | \"no\"", "required": false },
    "typeof": { "type": "string", "required": false },
    "unselectable": { "type": "\"on\" | \"off\"", "required": false },
    "variants": {
      "type": "Partial<Record<\"exit\" | \"enter\", Variant>>",
      "required": false
    },
    "vocab": { "type": "string", "required": false }
  },
  "PopoverFooter": {},
  "PopoverHeader": {}
}
